rm(wells_out)
rm(wells_out2)
#for(year in c(1986:1998, 2000:2019)) {
for(year in c(2014, 2017)) { ##### need to fix 2011, 2014, 2017
makeIntersectionZone(wells_in, year, "ks")
}
# CA .......................................................................
wells_in <- wells_all %>% filter(state == "CA")
#for(year in c(1984:2013, 2015:2019)) {
for(year in c(2011)) {  ##### need to fix 2011
makeIntersectionZone(wells_in, year, "ca")
}
# OK .......................................................................
wells_in <- wells_all %>% filter(state == "OK")
#for(year in c(1991, 1994:1998, 2000:2019)) {
for(year in c(2014)) {  ###### need to fix 2014
makeIntersectionZone(wells_in, year, "ok")
}
# KS .......................................................................
wells_in <- wells_all %>% filter(state == "KS")
makeIntersectionZone(wells_in, 2011, "ks")
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("terra")
# data input
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_2000 <- rast("data/raw/socscape/us_pop2000myc.tif")
pop_2010 <- rast("data/raw/socscape/us_pop2010myc.tif")
pop_2020 <- rast("data/raw/socscape/us_pop2020myc.tif")
# defines function to count population within 1 km of wells in wildfire burn
# areas for each state-year and outputs the estimate
assessPopulationExposed <- function(state_upper, state_lower, year) {
# flexibly imports relevant state-year wells in wildfire data
state_year_wells_in_wildfires <-
readRDS(paste("data/interim/wells_wildfire_intersection_state_year/",
state_lower, "_", year, ".rds", sep = "")) %>%
st_as_sf() %>%
st_make_valid() %>%
mutate(dummy_index = 1) %>%  # necessary to pass to vect()
vect()
# based on input year, defines appropriate population raster and variable
pop_raster <-
case_when(year %in% c(1984:1994) ~ "pop_1990",
year %in% c(1995:2004) ~ "pop_2000",
year %in% c(2005:2014) ~ "pop_2010",
year %in% c(2015:2020) ~ "pop_2020")
pop_variable <-
case_when(year %in% c(1984:1994) ~
"pop_estimate$us_pop1990myc.population_data",
year %in% c(1995:2004) ~
"pop_estimate$us_pop2000myc.population_data",
year %in% c(2005:2014) ~
"pop_estimate$us_pop2010myc.population_data",
year %in% c(2015:2020) ~
"pop_estimate$us_pop2020myc")
# crops and masks gridded population data
pop_estimate <-
terra::crop(eval(parse(text = pop_raster)), state_year_wells_in_wildfires)
pop_estimate <-
terra::mask(pop_estimate, state_year_wells_in_wildfires, touches = TRUE)
# captures estimated population living in mask
pop_estimate <- pop_estimate %>%
as.data.frame() %>%  # coerce to dataframe
as_tibble()  # then coerce to tibble (most comfortable to work with)
estimate_out <-
tibble(state       = state_upper,
year        = year,
pop_exposed = sum(eval(parse(text = pop_variable)), na.rm = TRUE))
return(estimate_out)
}
# KS .......................................................................
# makes tibble to capture data
ks_pop_exposed <- tibble(state       = "",
year        = as.numeric(),
pop_exposed = as.numeric())
# for each state-year with >= 1 wells in wildfire burn areas (previously
# assessed), estimates population within 1 km of those wells
#for(year in c(1986:1998, 2000:2019)) {  ##### need to fix 2011, 2014, 2017
for(year in c(1986:1998, 2000:2010, 2012:2013, 2015:2016, 2018:2019)) {
pop_exposed_out <-
assessPopulationExposed(state_upper = "KS", state_lower = "ks", year = year)
ks_pop_exposed <- ks_pop_exposed %>% bind_rows(pop_exposed_out)
}
write_csv(ks_pop_exposed, "output/results/ks_pop_exposed.csv")  # export
View(ks_pop_exposed)
gc()
# CA .......................................................................
# makes tibble to capture data
ca_pop_exposed <- tibble(state       = "",
year        = as.numeric(),
pop_exposed = as.numeric())
# for each state-year with >= 1 wells in wildfire burn areas (previously
# assessed), estimates population within 1 km of those wells
for(year in c(1984:2010, 2012:2013, 2015:2019)) {
#for(year in c(1984:2013, 2015:2010)) {
pop_exposed_out <-
assessPopulationExposed(state_upper = "CA", state_lower = "ca", year = year)
ca_pop_exposed <- ca_pop_exposed %>% bind_rows(pop_exposed_out)
}
write_csv(ca_pop_exposed, "output/results/ca_pop_exposed.csv")  # export
# OK .......................................................................
# makes tibble to capture data
ok_pop_exposed <- tibble(state       = "",
year        = as.numeric(),
pop_exposed = as.numeric())
# for each state-year with >= 1 wells in wildfire burn areas (previously
# assessed), estimates population within 1 km of those wells
#for(year in c(1991, 1994:1998, 2000:2019)) {  ###### error with 2014, will fix
for(year in c(1991, 1994:1998, 2000:2013, 2015:2019)) {
pop_exposed_out <-
assessPopulationExposed(state_upper = "OK", state_lower = "ok", year = year)
ok_pop_exposed <- ok_pop_exposed %>% bind_rows(pop_exposed_out)
}
write_csv(ok_pop_exposed, "output/results/ok_pop_exposed.csv")  # export
# for each state-year with >= 1 wells in wildfire burn areas (previously
# assessed), estimates population within 1 km of those wells
for(year in c(1984:2013, 2015:2010)) {
pop_exposed_out <-
assessPopulationExposed(state_upper = "CA", state_lower = "ca", year = year)
ca_pop_exposed <- ca_pop_exposed %>% bind_rows(pop_exposed_out)
}
write_csv(ca_pop_exposed, "output/results/ca_pop_exposed.csv")  # export
View(ca_pop_exposed)
gc()
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("terra")
# data input
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_2000 <- rast("data/raw/socscape/us_pop2000myc.tif")
pop_2010 <- rast("data/raw/socscape/us_pop2010myc.tif")
pop_2020 <- rast("data/raw/socscape/us_pop2020myc.tif")
# defines function to count population within 1 km of wells in wildfire burn
# areas for each state-year and outputs the estimate
assessPopulationExposed <- function(state_upper, state_lower, year) {
# flexibly imports relevant state-year wells in wildfire data
state_year_wells_in_wildfires <-
readRDS(paste("data/interim/wells_wildfire_intersection_state_year/",
state_lower, "_", year, ".rds", sep = "")) %>%
st_as_sf() %>%
st_make_valid() %>%
mutate(dummy_index = 1) %>%  # necessary to pass to vect()
vect()
# based on input year, defines appropriate population raster and variable
pop_raster <-
case_when(year %in% c(1984:1994) ~ "pop_1990",
year %in% c(1995:2004) ~ "pop_2000",
year %in% c(2005:2014) ~ "pop_2010",
year %in% c(2015:2020) ~ "pop_2020")
pop_variable <-
case_when(year %in% c(1984:1994) ~
"pop_estimate$us_pop1990myc.population_data",
year %in% c(1995:2004) ~
"pop_estimate$us_pop2000myc.population_data",
year %in% c(2005:2014) ~
"pop_estimate$us_pop2010myc.population_data",
year %in% c(2015:2020) ~
"pop_estimate$us_pop2020myc")
# crops and masks gridded population data
pop_estimate <-
terra::crop(eval(parse(text = pop_raster)), state_year_wells_in_wildfires)
pop_estimate <-
terra::mask(pop_estimate, state_year_wells_in_wildfires, touches = TRUE)
# captures estimated population living in mask
pop_estimate <- pop_estimate %>%
as.data.frame() %>%  # coerce to dataframe
as_tibble()  # then coerce to tibble (most comfortable to work with)
estimate_out <-
tibble(state       = state_upper,
year        = year,
pop_exposed = sum(eval(parse(text = pop_variable)), na.rm = TRUE))
return(estimate_out)
}
# KS .......................................................................
# makes tibble to capture data
ks_pop_exposed <- tibble(state       = "",
year        = as.numeric(),
pop_exposed = as.numeric())
# for each state-year with >= 1 wells in wildfire burn areas (previously
# assessed), estimates population within 1 km of those wells
for(year in c(1986:1998, 2000:2019)) {  ##### need to fix 2011, 2014, 2017
pop_exposed_out <-
assessPopulationExposed(state_upper = "KS", state_lower = "ks", year = year)
ks_pop_exposed <- ks_pop_exposed %>% bind_rows(pop_exposed_out)
}
write_csv(ks_pop_exposed, "output/results/ks_pop_exposed.csv")  # export
# OK .......................................................................
# makes tibble to capture data
ok_pop_exposed <- tibble(state       = "",
year        = as.numeric(),
pop_exposed = as.numeric())
gc()
?gc
# OK .......................................................................
# makes tibble to capture data
ok_pop_exposed <- tibble(state       = "",
year        = as.numeric(),
pop_exposed = as.numeric())
# for each state-year with >= 1 wells in wildfire burn areas (previously
# assessed), estimates population within 1 km of those wells
for(year in c(1991, 1994:1998, 2000:2019)) {
pop_exposed_out <-
assessPopulationExposed(state_upper = "OK", state_lower = "ok", year = year)
ok_pop_exposed <- ok_pop_exposed %>% bind_rows(pop_exposed_out)
}
write_csv(ok_pop_exposed, "output/results/ok_pop_exposed.csv")  # export
gc()
>>>>>>> Stashed changes
## setup ---------------------------------------------------------------------
source("code/0-setup/01-setup.R")
# data input
wells_kbdi <- readRDS("data/processed/wells_kbdi.rds")
federal_lands <-
st_read("data/raw/stanford_geo/federal_lands/fedlanp020.shp") %>%
filter(STATE %in% c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
as_tibble() %>%
mutate(well_on_federal_land = 1) %>%
st_as_sf()
# makes dataset with well ID and geometry only
wells <- wells_kbdi %>%
select(api_number, state, geometry) %>%
st_as_sf() %>%
st_transform(crs_albers)
# OK .......................................................................
fedlands_ok <- federal_lands %>% filter(STATE == "OK") %>%
st_geometry() %>%
st_union()
# OR .......................................................................
fedlands_or <- federal_lands %>% filter(STATE == "OR") %>%
st_geometry() %>%
st_union()
wells_or <- wells %>% filter(state == "OR")
wells_fedlands_or <- st_intersection(wells_or, fedlands_or)
saveRDS(wells_fedlands_or,
"data/interim/wells_on_public_lands/wells_fedlands_or.rds")
# SD .......................................................................
fedlands_sd <- federal_lands %>% filter(STATE == "SD") %>%
st_geometry() %>%
st_union()
wells_sd <- wells %>% filter(state == "SD")
wells_fedlands_sd <- st_intersection(wells_sd, fedlands_sd)
saveRDS(wells_fedlands_sd,
"data/interim/wells_on_public_lands/wells_fedlands_sd.rds")
# UT .......................................................................
fedlands_ut <- federal_lands %>% filter(STATE == "UT") %>%
st_geometry() %>%
st_union()
wells_ut <- wells %>% filter(state == "UT")
wells_fedlands_ut <- st_intersection(wells_ut, fedlands_ut)
saveRDS(wells_fedlands_ut,
"data/interim/wells_on_public_lands/wells_fedlands_ut.rds")
# WY .......................................................................
fedlands_wy <- federal_lands %>% filter(STATE == "WY") %>%
st_geometry() %>%
st_union()
wells_wy <- wells %>% filter(state == "WY")
wells_fedlands_wy <- st_intersection(wells_wy, fedlands_wy)
saveRDS(wells_fedlands_wy,
"data/interim/wells_on_public_lands/wells_fedlands_wy.rds")
# NV .......................................................................
##### revisit
fedlands_nv <- federal_lands %>% filter(STATE == "NV") %>%
st_geometry() %>%
st_union()
wells_nv <- wells %>% filter(state == "NV")
wells_fedlands_nv <- st_intersection(wells_nv, fedlands_nv)
saveRDS(wells_fedlands_nv,
"data/interim/wells_on_public_lands/wells_fedlands_nv.rds")
# OK .......................................................................
fedlands_ok <- federal_lands %>% filter(STATE == "OK") %>%
st_geometry() %>%
st_union()
wells_ok <- wells %>% filter(state == "OK")
wells_fedlands_ok <- st_intersection(wells_ok, fedlands_ok)
saveRDS(wells_fedlands_ok,
"data/interim/wells_on_public_lands/wells_fedlands_ok.rds")
# TX .......................................................................
fedlands_tx <- federal_lands %>% filter(STATE == "TX") %>%
st_geometry() %>%
st_union()
wells_tx <- wells %>% filter(state == "TX")
wells_fedlands_tx <- st_intersection(wells_tx, fedlands_tx)
saveRDS(wells_fedlands_tx,
"data/interim/wells_on_public_lands/wells_fedlands_tx.rds")
plot(fedlands_ok)
plot(wells_ok, add = T)
wells_fedlands_nv
wells_fedlands_ok
## setup ---------------------------------------------------------------------
source("code/0-setup/01-setup.R")
# data input
wells_kbdi <- readRDS("data/processed/wells_kbdi.rds")
federal_lands <-
st_read("data/raw/stanford_geo/federal_lands/fedlanp020.shp") %>%
filter(STATE %in% c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
as_tibble() %>%
mutate(well_on_federal_land = 1) %>%
st_as_sf()
# makes dataset with well ID and geometry only
wells <- wells_kbdi %>%
select(api_number, state, geometry) %>%
st_as_sf() %>%
st_transform(crs_albers)
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_ca.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_co.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_ks.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_la.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_mo.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_mt.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_nd.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_ne.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_nm.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_nv.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_ok.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_or.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_sd.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_tx.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_ut.rds")) %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_wy.rds")) %>%
select("api_number", "state", "well_on_federal_lands")
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) #%>%
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) #%>%
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ca.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_co.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ks.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_la.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mo.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mt.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ne.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nm.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nv.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ok.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_or.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_sd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_tx.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ut.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_wy.rds")) %>%
select("api_number", "state", "well_on_federal_lands")
# NM .......................................................................
fedlands_nm <- federal_lands %>% filter(STATE == "NM") %>%
st_geometry() %>%
st_union()
plot(fedlands_nm)
wells_nm <- wells %>% filter(state == "NM")
plot(wells_nm, add = T)
rm(wells_kbdi)
rm(federal_lands)
rm(wells)
rm(wells_fedlands)
gc()
wells_fedlands_nm <- st_intersection(wells_nm, fedlands_nm)
saveRDS(wells_fedlands_nm,
"data/interim/wells_on_public_lands/wells_fedlands_nm.rds")
-----------------------------------------------
source("code/0-setup/01-setup.R
## setup ---------------------------------------------------------------------
source("code/0-setup/01-setup.R")
## setup ---------------------------------------------------------------------
source("code/0-setup/01-setup.R")
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ca.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_co.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ks.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_la.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mo.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mt.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ne.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nm.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nv.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ok.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_or.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_sd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_tx.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ut.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_wy.rds")) %>%
select("api_number", "state", "well_on_federal_lands")
# data input
wells_kbdi <- readRDS("data/processed/wells_kbdi.rds")
# joins federal lands identifier to wells_kbdi dataset
wells_kbdi2 <- wells_kbdi %>%
left_join(wells_fedlands, by = c("api_number", "state")) %>%
mutate(well_on_federal_lands = replace_na(well_on_federal_lands, 0))
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds")# %>%
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ca.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_co.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ks.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_la.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mo.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mt.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ne.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nm.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nv.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ok.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_or.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_sd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_tx.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ut.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_wy.rds")) %>%
select("api_number", "state", "well_on_federal_land")
# joins federal lands identifier to wells_kbdi dataset
wells_kbdi2 <- wells_kbdi %>%
left_join(wells_fedlands, by = c("api_number", "state")) %>%
mutate(well_on_federal_lands = replace_na(well_on_federal_lands, 0))
# exports processed dataset
saveRDS(wells_kbdi2, "data/processed/wells_kbdi2.rds")
# joins federal lands identifier to wells_kbdi dataset
wells_kbdi2 <- wells_kbdi %>%
left_join(wells_fedlands, by = c("api_number", "state")) %>%
mutate(well_on_federal_land = replace_na(well_on_federal_land, 0))
# exports processed dataset
saveRDS(wells_kbdi2, "data/processed/wells_kbdi2.rds")
glimpse(wells_kbdi2)
wells_kbdi2
d <- as_tibble(wells_kbdi2)
d <- st_as_sf(wells_kbdi2)
d
glimpse(wells_fedlands)
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ca.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_co.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ks.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_la.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mo.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mt.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ne.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nm.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nv.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ok.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_or.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_sd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_tx.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ut.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_wy.rds")) %>%
as_tibble() %>%
select("api_number", "state", "well_on_federal_land")
# joins federal lands identifier to wells_kbdi dataset
wells_kbdi2 <- wells_kbdi %>%
left_join(wells_fedlands, by = c("api_number", "state")) %>%
mutate(well_on_federal_land = replace_na(well_on_federal_land, 0))
glimpse(wells_kbdi2)
sum(wells_kbdi2$well_on_federal_land)
wells_fedlands
sum(wells_fedlands$well_on_federal_land)
sum(wells_fedlands$well_on_federal_land, na.rm = T)
View(wells_fedlands)
d <- wells_fedlands %>% filter(well_on_federal_land == 1)
View(d)
# merges datasets
wells_fedlands <-
readRDS("data/interim/wells_on_public_lands/wells_fedlands_ar.rds") %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_az.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ca.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_co.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ks.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_la.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mo.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_mt.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ne.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nm.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_nv.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ok.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_or.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_sd.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_tx.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_ut.rds")) %>%
bind_rows(readRDS("data/interim/wells_on_public_lands/wells_fedlands_wy.rds")) %>%
as_tibble() %>%
mutate(well_on_federal_land = 1 ) %>%
select("api_number", "state", "well_on_federal_land")
# joins federal lands identifier to wells_kbdi dataset
wells_kbdi2 <- wells_kbdi %>%
left_join(wells_fedlands, by = c("api_number", "state")) %>%
mutate(well_on_federal_land = replace_na(well_on_federal_land, 0))
glimpse(wells_kbdi2)
sum(wells_kbdi2$well_on_federal_land)
# exports processed dataset
saveRDS(wells_kbdi2, "data/processed/wells_kbdi.rds")
