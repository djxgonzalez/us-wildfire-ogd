buffer_dist,
exp_variable) {
# generates buffer of given distance around the polygon
wildfire <- wildfire %>%
st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates <-
lapply(wildfires_in[c(1:3), ],
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in m; 0 or 1,000
exp_variable = "n_wells_no_dates")
w2 <- wildfires_in
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
# wells w/in 1km of wildfire boundary  . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates_buffer_1km <-
mclapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer       = 1000,  # in m; 0 or 1,000
coord_ref    = 5070,
exp_variable = "n_wells_no_dates_buffer_1km")
class(wildfires_in)
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates <-
lapply(wildfires_in[c(1:3), ],
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in m; 0 or 1,000
exp_variable = "n_wells_no_dates")
assessExposureCount <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates <-
lapply(wildfires_in[c(1:3), ],
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in m; 0 or 1,000
exp_variable = "n_wells_no_dates")
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates <-
lapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in m; 0 or 1,000
exp_variable = "n_wells_no_dates")
wells_in <- st_transform(crs_albers)
class(wells_in)
wells_in <-wells_in %>% st_transform(crs_albers)
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates <-
lapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in m; 0 or 1,000
exp_variable = "n_wells_no_dates")
wildfires_wells_ar_no_dates
wildfires_wells_ar_no_dates2 <-
do.call("rbind", wildfires_wells_ar_no_dates) #%>%  # converts from list
wildfires_wells_ar_no_dates2
View(wildfires_wells_ar_no_dates2)
wildfires_wells_ar_no_dates <-
do.call("rbind", wildfires_wells_ar_no_dates)  # converts from list
rm(w2)
write_csv(wildfires_wells_ar_no_dates,
"data/processed/wildfires_buffers/wildfires_wells_ar_no_dates.csv")
write_csv(wildfires_wells_ar_no_dates,
"data/processed/wildfires_wells/wildfires_wells_ar_no_dates.csv")
# wells w/in 1km of wildfire boundary  . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates_buffer_1km <-
mclapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer       = 1000,  # in meters
exp_variable = "n_wells_no_dates_buffer_1km")
wildfires_wells_ar_no_dates_buffer_1km <-
do.call("rbind", wildfires_wells_ar_no_dates_buffer_1km)
wildfires_wells_ar_no_dates_buffer_1km
View(wildfires_wells_ar_no_dates_buffer_1km)
# removes datasets before moving on to the next state
rm(wildfires_in, wells_in, wildfires_wells_ar_no_dates,
wildfires_wells_ar_no_dates_buffer_1km)
rm(wildfires_wells_ar_no_dates2)
# restricts to wildfires near wells (i.e., intersect with 1 km well buffer)
wildfires_in <- wildfires_all %>%
filter(state == "AK") %>%
st_as_sf() %>%
st_transform(crs_alaska) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_ak_buffer_1km.rds"))
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AK") %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_ak_buffer_1km.rds")) %>%
st_transform(crs_alaska)
# restricts to wildfires near wells (i.e., intersect with 1 km well buffer)
wildfires_in <- wildfires_all %>%
filter(state == "AK") %>%
st_as_sf() %>%
st_transform(crs_alaska) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_ak_buffer_1km.rds"))
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AK") %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_ak_buffer_1km.rds")) %>%
st_transform(crs_alaska)
d <- readRDS("data/interim/wildfires_buffers/wildfires_ak_buffer_1km.rds")
d
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AK") #%>%
wells_in
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AK") %>%
st_transform(crs_nad83) %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_ak_buffer_1km.rds")) %>%
st_transform(crs_alaska)
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AK") %>%
st_intersection(
st_make_valid(
readRDS("data/interim/wildfires_buffers/wildfires_ak_buffer_1km.rds"))) %>%
st_transform(crs_alaska)
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
rm(d)
wildfires_wells_ak_no_dates <-
mclapply(wildfires_in,  # if not using MacOS, use `lapply()` instead
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in meters
exp_variable = "n_wells_no_dates")
wildfires_wells_ak_no_dates <-
do.call("rbind", wildfires_wells_ak_no_dates)  # converts from list
wildfires_wells_ak_no_dates
write_csv(wildfires_wells_ak_no_dates,
"data/processed/wildfires_wells/wildfires_wells_ak_no_dates.csv")
# wells w/in 1km of wildfire boundary  . . . . . . . . . . . . . . . .
wildfires_wells_ak_no_dates_buffer_1km <-
mclapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer       = 1000,  # in meters
exp_variable = "n_wells_no_dates_buffer_1km")
wildfires_wells_ak_no_dates_buffer_1km <-
do.call("rbind", wildfires_wells_ak_no_dates_buffer_1km)
wildfires_wells_ak_no_dates_buffer_1km
write_csv(wildfires_wells_ak_no_dates_buffer_1km,
"../processed/wildfires_wells/wildfires_wells_ak_no_dates_buffer_1km.csv")
write_csv(wildfires_wells_ak_no_dates_buffer_1km,
"processed/wildfires_wells/wildfires_wells_ak_no_dates_buffer_1km.csv")
write_csv(wildfires_wells_ak_no_dates_buffer_1km,
"data/processed/wildfires_wells/wildfires_wells_ak_no_dates_buffer_1km.csv")
# removes datasets before moving on to the next state
rm(wildfires_in, wells_in, wildfires_wells_ak_no_dates,
wildfires_wells_ak_no_dates_buffer_1km)
# restricts to wildfires near wells (i.e., intersect with 1 km well buffer)
wildfires_in <- wildfires_all %>%
filter(state == "AR") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_ar_buffer_1km.rds"))
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AR") %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_ar_buffer_1km.rds")) %>%
st_transform(crs_albers)
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates <-
mclapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in meters
exp_variable = "n_wells_no_dates")
wildfires_wells_ar_no_dates <-
do.call("rbind", wildfires_wells_ar_no_dates)  # converts from list
write_csv(wildfires_wells_ar_no_dates,
"data/processed/wildfires_wells/wildfires_wells_ar_no_dates.csv")
# wells w/in 1km of wildfire boundary  . . . . . . . . . . . . . . . .
wildfires_wells_ar_no_dates_buffer_1km <-
mclapply(wildfires_in,
FUN          = assessExposureCount,
wells        = wells_in,
buffer       = 1000,  # in meters
exp_variable = "n_wells_no_dates_buffer_1km")
wildfires_wells_ar_no_dates_buffer_1km <-
do.call("rbind", wildfires_wells_ar_no_dates_buffer_1km)
write_csv(wildfires_wells_ar_no_dates_buffer_1km,
"data/processed/wildfires_wells/wildfires_wells_ar_no_dates_buffer_1km.csv")
# removes datasets before moving on to the next state
rm(wildfires_in, wells_in, wildfires_wells_ar_no_dates,
wildfires_wells_ar_no_dates_buffer_1km)
# data prep ..............................................................
# restricts to wildfires near wells (i.e., intersect with 1 km well buffer)
wildfires_in <- wildfires_all %>%
filter(state == "AZ") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_az_buffer_1km.rds"))
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AZ") %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_az_buffer_1km.rds")) %>%
st_transform(crs_albers)
wildfires_all %>%
filter(state == "AZ") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_az_buffer_1km.rds")
wildfires_all %>%
filter(state == "CA") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_ca_buffer_1km.rds")
wildfires_all %>%
filter(state == "CO") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_co_buffer_1km.rds")
wells_all
glimpse(wells_all)
glimpse(wildfires_all)
assessExposureCount <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# omits wells where the year of the earliest operational date was after the
# year of the wildfire; retains NA dates, too
wells <- wells %>% filter(Year(date_earliest) <= wildfire$year |
is.na(date_earliest))
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
# restricts to wildfires near wells (i.e., intersect with 1 km well buffer)
wildfires_in <- wildfires_all %>%
filter(state == "AK") %>%
st_as_sf() %>%
st_transform(crs_alaska) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_ak_buffer_1km.rds"))
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AK") %>%
st_intersection(
st_make_valid(
readRDS("data/interim/wildfires_buffers/wildfires_ak_buffer_1km.rds"))) %>%
st_transform(crs_alaska)
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ak_no_dates <-
mclapply(wildfires_in,  # if not using MacOS, use `lapply()` instead
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in meters
exp_variable = "n_wells_no_dates")
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ak_no_dates <-
lapply(wildfires_in,  # if not using MacOS, use `lapply()` instead
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in meters
exp_variable = "n_wells_no_dates")
library("lubridate")  # for `Year()` fxn
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ak_no_dates <-
lapply(wildfires_in,  # if not using MacOS, use `lapply()` instead
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in meters
exp_variable = "n_wells_no_dates")
?year
?Year
assessExposureCount <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# omits wells where the year of the earliest operational date was after the
# year of the wildfire; retains NA dates, too
wells <- wells %>% filter(year(date_earliest) <= wildfire$year |
is.na(date_earliest))
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
# wells inside wildfire boundary  . . . . . . . . . . . . . . . . . . .
wildfires_wells_ak_no_dates <-
lapply(wildfires_in,  # if not using MacOS, use `lapply()` instead
FUN          = assessExposureCount,
wells        = wells_in,
buffer_dist  = 0,  # in meters
exp_variable = "n_wells_no_dates")
wildfires_wells_ak_no_dates <-
do.call("rbind", wildfires_wells_ak_no_dates)  # converts from list
wildfires_wells_ak_no_dates
assessExposureCount <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# omits wells where the year of the earliest operational date was after the
# year of the wildfire; retains NA dates, too, presumed to pre-date the
# study period given poor record keeping prior to 1980s
wells <- wells %>% filter(year(date_earliest) <= wildfire$year |
is.na(date_earliest))
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
wells_co_buffer_1km <- wells_all %>%
filter(state == "CO") %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union()
wildfires_all %>%
filter(state == "CO") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_co_buffer_1km.rds")
wildfires_all %>%
filter(state == "ID") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_id_buffer_1km.rds")
wildfires_all %>%
filter(state == "KS") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_ks_buffer_1km.rds")
wildfires_all %>%
filter(state == "LA") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_la_buffer_1km.rds")
wildfires_all %>%
filter(state == "MO") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_mo_buffer_1km.rds")
wildfires_all %>%
filter(state == "MT") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_mt_buffer_1km.rds")
wildfires_all %>%
filter(state == "ND") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_nd_buffer_1km.rds")
wildfires_all %>%
filter(state == "NE") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_ne_buffer_1km.rds")
wildfires_all %>%
filter(state == "NM") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_nm_buffer_1km.rds")
wildfires_all %>%
filter(state == "NV") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_nv_buffer_1km.rds")
wildfires_all %>%
filter(state == "OK") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_ok_buffer_1km.rds")
wildfires_all %>%
filter(state == "OR") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_or_buffer_1km.rds")
wildfires_all %>%
filter(state == "SD") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_sd_buffer_1km.rds")
wildfires_all %>%
filter(state == "TX") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_tx_buffer_1km.rds")
wildfires_all %>%
filter(state == "UT") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_ut_buffer_1km.rds")
wildfires_all %>%
filter(state == "WA") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_wa_buffer_1km.rds")
wildfires_all %>%
filter(state == "WY") %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_buffer(dist = 1000) %>%
st_union() %>%
st_transform(crs_nad83) %>%
saveRDS("data/interim/wildfires_buffers/wildfires_wy_buffer_1km.rds")
