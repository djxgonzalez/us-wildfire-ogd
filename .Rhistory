nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# data prep ................................................................
# gets necessary variables as numeric vectors
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017  <- as.matrix(expand_grid(lon_2017, lat_2017))
# KBDI data for spring 2017
kbdi_2017_spring <- ncvar_get(nc_spring_2017, "KBDI")
fill_value   <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer <- ncvar_get(nc_summer_2017, "KBDI")
fill_value   <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall <- ncvar_get(nc_fall_2017, "KBDI")
fill_value   <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
glimpse(kbdi_2017)
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon")
lat_2050     <- ncvar_get(latlon_2050, "lat")
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector
lon_lat_2050 <- as.matrix(expand_grid(lon_2050, lat_2050))
class(lat_2017)
class(lat_2050)
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon")
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon")
class(lat_2050)
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.matrix()
class(lon_2050)
lon_2050
glimpse(lon_2050)
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector() %>% as.matrix()
glimpse(lon_2050)
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector() %>% as.matrix()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector() %>% as.matrix()
lon_lat_2050 <- as.matrix(expand_grid(lon_2050, lat_2050))
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") #%>% as.vector() %>% as.matrix()
lat_2050     <- ncvar_get(latlon_2050, "lat") #%>% as.vector() %>% as.matrix()
lon_lat_2050 <- as.matrix(expand_grid(lon_2050, lat_2050))
View(lon_lat_2050)
lon_lat_2050 <- as.matrix(cbind(lon_2050, lat_2050))
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector() %>% as.matrix()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector() %>% as.matrix()
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector()
lon_lat_2050 <- as.matrix(cbind(lon_2050, lat_2050))
lon_lat_2050 <- as.matrix(bind_cols(lon_2050, lat_2050))
summary(lon_2050)
summary(lat_2050)
lon_lat_2050 <- bind_cols(lon_2050, lat_2050)
lon_lat_2050 <- bind_cols(lon_2050, lat_2050) %>% as.matrix()
lon_lat_2050 <- bind_cols(lon_2050, lat_2050)
View(lon_lat_2050)
colnames(lon_lat_2050) <- c("lon", "lat")
head(lon_lat_2050)
lon_lat_2050b <- as.matrix(lon_lat_2050)
View(lon_lat_2050b)
lon_lat_2050 <- as.matrix(lon_lat_2050)
# assembles all KBDI layers for 2050
kbdi_2050 <- data.frame(cbind(lon_lat_2050, kbdi_2050_spring_long,
kbdi_2050_summer_long, kbdi_2050_fall_long))
colnames(kbdi_2050) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2050 <- kbdi_2050 %>%
as_tibble() %>%
mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2050_raster <-
rasterFromXYZ(kbdi_2050, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2050_raster, col = viridis(n = 20, option = "inferno"))
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
# attaches packages we need for this script
library("RColorBrewer")
library("ncdf4")
library("graphics")
library("usethis")
library("sp")
library("raster")
library("viridis")
library("tidync")
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
nc_spring_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Spring_2046-2054_R8Y4.nc")
nc_summer_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Summer_2046-2054_R8Y4.nc")
nc_fall_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Fall_2046-2054_R8Y4.nc")
# data prep ................................................................
# gets necessary variables as numeric vectors
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector()
lon_lat_2050 <- bind_cols(lon_2050, lat_2050)
colnames(lon_lat_2050) <- c("lon", "lat")
lon_lat_2050 <- as.matrix(lon_lat_2050)
#lon_lat_2050 <- as.matrix(expand_grid(lon_2050, lat_2050))
# KBDI data for spring 2050
kbdi_2050_spring      <- ncvar_get(nc_spring_2050, "KBDI")
fill_value            <- ncatt_get(nc_spring_2050, "KBDI", "_FillValue")
kbdi_2050_spring[kbdi_2050_spring == fill_value$value] <- NA
kbdi_2050_spring_long <- as.vector(kbdi_2050_spring)
# KBDI data for summer 2050
kbdi_2050_summer      <- ncvar_get(nc_summer_2050, "KBDI")
fill_value            <- ncatt_get(nc_summer_2050, "KBDI", "_FillValue")
kbdi_2050_summer[kbdi_2050_summer == fill_value$value] <- NA
kbdi_2050_summer_long <- as.vector(kbdi_2050_summer)
# KBDI data for fall 2050
kbdi_2050_fall      <- ncvar_get(nc_fall_2050, "KBDI")
fill_value          <- ncatt_get(nc_fall_2050, "KBDI", "_FillValue")
kbdi_2050_fall[kbdi_2050_fall == fill_value$value] <- NA
kbdi_2050_fall_long <- as.vector(kbdi_2050_fall)
# assembles all KBDI layers for 2050
kbdi_2050 <- data.frame(cbind(lon_lat_2050, kbdi_2050_spring_long,
kbdi_2050_summer_long, kbdi_2050_fall_long))
colnames(kbdi_2050) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2050 <- kbdi_2050 %>%
as_tibble() %>%
mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# removes files we no longer need
rm(fill_value, kbdi_2050_fall, kbdi_2050_spring, kbdi_2050_summer, nc_fall_2050,
nc_spring_2050, nc_summer_2050)
# removes files we no longer need
rm(fill_value, kbdi_2050_fall, kbdi_2050_spring, kbdi_2050_summer, nc_fall_2050,
kbdi_2050_spring_long, kbdi_2050_summer_long, nc_fall_2050_long,
nc_spring_2050, nc_summer_2050)
# converts to a raster for additional analyses
kbdi_2050_raster <-
rasterFromXYZ(kbdi_2050, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# exports processed raster data ............................................
saveRDS(kbdi_2050_raster, "data/processed/raster_max_kbdi_2050.rds")
# visualizes wildfire risk
plot(kbdi_2050_raster, col = viridis(n = 20, option = "inferno"))
warnings()
glimpse(kbdi_2050)
summary(kbdi_2050)
# converts to a raster for additional analyses
kbdi_2050_raster <-
rasterFromXYZ(kbdi_2050)#, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
nc_spring_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017 <- as.matrix(expand_grid(lon_2017, lat_2017))
# KBDI data for spring 2017
kbdi_2017_spring      <- ncvar_get(nc_spring_2017, "KBDI")
fill_value            <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer      <- ncvar_get(nc_summer_2017, "KBDI")
fill_value            <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall      <- ncvar_get(nc_fall_2017, "KBDI")
fill_value          <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 > 0) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI ≥ 600 indicates high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017)#, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017)#, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
kbdi_2017_rasterb <- readRDS("data/processed/raster_max_kbdi_2017.rds")
plot(kbdi_2017_rasterb)
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
# attaches packages we need for this script
library("RColorBrewer")
library("ncdf4")
library("graphics")
library("usethis")
library("sp")
library("raster")
library("viridis")
library("tidync")
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
nc_spring_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017 <- as.matrix(expand_grid(lon_2017, lat_2017))
# KBDI data for spring 2017
kbdi_2017_spring      <- ncvar_get(nc_spring_2017, "KBDI")
fill_value            <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer      <- ncvar_get(nc_summer_2017, "KBDI")
fill_value            <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall      <- ncvar_get(nc_fall_2017, "KBDI")
fill_value          <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 > 0) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI ≥ 600 indicates high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017)#, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017), crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
kbdi_2017_raster2 <- readRDS("data/processed/raster_max_kbdi_2017.rds")
plot(kbdi_2017_raster2)
# visualizes wildfire risk
plot(kbdi_2017_raster2, col = viridis(n = 20, option = "inferno"))
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
# attaches packages we need for this script
library("ncdf4")
library("graphics")
library("usethis")
library("raster")
library("tidync")
# data input
wells_interim <- readRDS("data/interim/enverus_wells")
# data input
wells_interim <- readRDS("data/interim/enverus_wells.rds")
raster_max_kbdi_2017 <- readRDS("data/processed/raster_max_kbdi_2017.rds")
us_states            <- st_read("data/raw/us_census/tl_2018_us_state.shp")
## California -------------------------------------------------------
##
state_ca <- us_states %>% filter(NAME == "California")
plot(state_ca)
## California -------------------------------------------------------
##
state_ca <- us_states %>% filter(NAME == "California") %>% st_geometry()
plot(state_ca)
?crop
library("terra")
library("terra")
?terra::crop
ca_kbdi_2017 <- raster_max_kbdi_2017 %>% terra::crop(ca_boundary)
# data prep
ca_boundary  <- us_states %>% filter(NAME == "California") %>% st_geometry()
ca_kbdi_2017 <- raster_max_kbdi_2017 %>% terra::crop(ca_boundary)
ca_wells <- wells_interim$state
ca_wells <- wells_interim %>% filter(state == "CA") %>% sample_n(1000)
plot(raster_max_kbdi_2017)
# data prep
kbdi_high <- raster_max_kbdi_2017 %>% filter(kbdi_max_2017 >= 600)
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
nc_spring_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017 <- as.matrix(expand.grid(lon_2017, lat_2017))
rm(latlon_2017, lon_2017, lat_2017)
# KBDI data for spring 2017
kbdi_2017_spring      <- ncvar_get(nc_spring_2017, "KBDI")
fill_value            <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer      <- ncvar_get(nc_summer_2017, "KBDI")
fill_value            <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall      <- ncvar_get(nc_fall_2017, "KBDI")
fill_value          <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# removes files we no longer need
rm(fill_value, kbdi_2017_fall, kbdi_2017_spring, kbdi_2017_summer, nc_fall_2017,
kbdi_2017_spring_long, kbdi_2017_summer_long, nc_2017_fall_long,
nc_spring_2017, nc_summer_2017, kbdi_2017_fall_long, lon_lat_2017)
# removes files we no longer need
rm(fill_value, kbdi_2017_fall, kbdi_2017_spring, kbdi_2017_summer, nc_fall_2017,
kbdi_2017_spring_long, kbdi_2017_summer_long,
nc_spring_2017, nc_summer_2017, kbdi_2017_fall_long, lon_lat_2017)
# finds max KBDI value for across the three seasons
kbdi_max_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# finds max KBDI value for across the three seasons
kbdi_high_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 =  pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 >= 600) %>%
dplyr::mutate(kbdi_high_2017 = 1) %>%
dplyr::select(lon, lat, kbdi_high_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
nc_spring_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# data prep ................................................................
# gets necessary variables as numeric vectors
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017 <- as.matrix(expand.grid(lon_2017, lat_2017))
rm(latlon_2017, lon_2017, lat_2017)
# KBDI data for spring 2017
kbdi_2017_spring      <- ncvar_get(nc_spring_2017, "KBDI")
fill_value            <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer      <- ncvar_get(nc_summer_2017, "KBDI")
fill_value            <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall      <- ncvar_get(nc_fall_2017, "KBDI")
fill_value          <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_max_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# finds max KBDI value for across the three seasons
kbdi_high_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 =  pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 >= 600) %>%
dplyr::mutate(kbdi_high_2017 = 1) %>%
dplyr::select(lon, lat, kbdi_high_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses with CRS NAD83
raster_kbdi_max_2017 <-
rasterFromXYZ(kbdi_2017_max, crs = CRS("+init=epsg:4269"))
# finds max KBDI value for across the three seasons
kbdi_max_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# finds max KBDI value for across the three seasons
kbdi_high_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 =  pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 >= 600) %>%
dplyr::mutate(kbdi_high_2017 = 1) %>%
dplyr::select(lon, lat, kbdi_high_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses with CRS NAD83
raster_kbdi_max_2017 <-
rasterFromXYZ(kbdi_2017_max, crs = CRS("+init=epsg:4269"))
# converts to a raster for additional analyses with CRS NAD83
raster_kbdi_max_2017 <-
rasterFromXYZ(kbdi_max_2017, crs = CRS("+init=epsg:4269"))
raster_kbdi_high_2017 <-
rasterFromXYZ(kbdi_high_2017, crs = CRS("+init=epsg:4269"))
# visualizes wildfire risk
plot(raster_kbdi_max_2017, col = viridis(n = 20, option = "inferno"))
# visualizes wildfire risk
plot(raster_kbdi_max_2017, col = "red")
raster_kbdi_max_2017$kbdi_max_2017
# finds max KBDI value for across the three seasons
kbdi_high_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 =  pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 >= 0) %>%
dplyr::select(lon, lat, kbdi_high_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# finds max KBDI value for across the three seasons
kbdi_high_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 =  pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 >= 0) %>%
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
r <- raster_kbdi_high_2017 %>% terra::rast()
?terra::rast()
