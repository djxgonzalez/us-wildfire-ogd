method = "lm", formula = y ~ x, se = FALSE,
color = "black", lwd = 0.8, alpha = 0.3) +
geom_smooth(data = pop_exposed_year, aes(year, pop_exposed_n),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", linetype = "longdash", lwd = 0.8, alpha = 0.3) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_0a
# exports figures
ggsave(filename = "figure_0a.png", plot = figure_0a, device = "png",
height = 1.8, width = 4, path = "output/figures/components/")
# figure 0a ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_0a <-
ggplot()  +
geom_vline(aes(xintercept = 1990), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2000), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2010), lwd = 0.2, color = "gray") +
geom_bar(data = wildfires_area_year, aes(year, area_burned_ha),
stat = "identity", fill = "red", alpha = 0.2) +
# geom_smooth(data = wildfires_area_year, aes(year, area_burned_ha),
#             method = "lm", formula = y ~ x, se = FALSE,
#             color = "red", lwd = 0.6, alpha = 0.3) +
geom_smooth(data = wells_wildfires_year, aes(year, n_wells),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", lwd = 0.8, alpha = 0.3) +
geom_smooth(data = pop_exposed_year, aes(year, pop_exposed_n),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", linetype = "dash", lwd = 0.8, alpha = 0.3) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_0a
?geom_line
# figure 0a ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_0a <-
ggplot()  +
geom_vline(aes(xintercept = 1990), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2000), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2010), lwd = 0.2, color = "gray") +
geom_bar(data = wildfires_area_year, aes(year, area_burned_ha),
stat = "identity", fill = "red", alpha = 0.2) +
# geom_smooth(data = wildfires_area_year, aes(year, area_burned_ha),
#             method = "lm", formula = y ~ x, se = FALSE,
#             color = "red", lwd = 0.6, alpha = 0.3) +
geom_smooth(data = wells_wildfires_year, aes(year, n_wells),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", lwd = 0.8, alpha = 0.3) +
geom_smooth(data = pop_exposed_year, aes(year, pop_exposed_n),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", linetype = "dashed", lwd = 0.8, alpha = 0.3) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_0a
# exports figures
ggsave(filename = "figure_0a.png", plot = figure_0a, device = "png",
height = 1.8, width = 4, path = "output/figures/components/")
wells_kbdi <- readRDS("data/processed/wells_kbdi.rds")
# summarizes results to feed into ggplot
data_0b <-
tibble(period  = c("1996–2004", "2046–2054", "2086–2094",
"1996–2004", "2046–2054", "2086–2094"),
kbdi    = c("450", "450", "450",
"600", "600", "600"),
n_wells = c(nrow(subset(wells_kbdi, kbdi_max_2017 >= 450 &
kbdi_max_2017 < 600)),
nrow(subset(wells_kbdi, kbdi_max_2050 >= 450 &
kbdi_max_2050 < 600)),
nrow(subset(wells_kbdi, kbdi_max_2090 >= 450 &
kbdi_max_2090 < 600)),
nrow(subset(wells_kbdi, kbdi_max_2017 >= 600)),
nrow(subset(wells_kbdi, kbdi_max_2050 >= 600)),
nrow(subset(wells_kbdi, kbdi_max_2090 >= 600))))
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells, fill = kbdi),
stat = "identity", position = "stack") +
scale_fill_manual(values = c("#AD8ABB", "#ffb3df")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
scale_y_continuous("",
# adds second y-axis with % wells in high risk areas
sec.axis =
sec_axis(~ . / nrow(wells_kbdi) * 100, name = "")) +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells, fill = kbdi),
stat = "identity", position = "stack") +
scale_fill_manual(values = c("#AD8ABB", "#ffb3df")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0b
# exports figures
ggsave(filename = "figure_0b.png", plot = figure_0b, device = "png",
height = 1.8, width = 4, path = "output/figures/components/")
# figure 0a ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_0a <-
ggplot()  +
geom_vline(aes(xintercept = 1990), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2000), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2010), lwd = 0.2, color = "gray") +
geom_bar(data = wildfires_area_year, aes(year, area_burned_ha),
stat = "identity", fill = "red", alpha = 0.2) +
# geom_smooth(data = wildfires_area_year, aes(year, area_burned_ha),
#             method = "lm", formula = y ~ x, se = FALSE,
#             color = "red", lwd = 0.6, alpha = 0.3) +
geom_smooth(data = wells_wildfires_year, aes(year, n_wells),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", lwd = 0.8, alpha = 0.3) +
geom_smooth(data = pop_exposed_year, aes(year, pop_exposed_n),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", linetype = "dashed", lwd = 0.8, alpha = 0.3) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0a
# exports figures
ggsave(filename = "figure_0a.png", plot = figure_0a, device = "png",
height = 2, width = 4, path = "output/figures/components/")
# summarizes results to feed into ggplot
data_0b <-
tibble(period  = c("1996–2004", "2046–2054", "2086–2094",
"1996–2004", "2046–2054", "2086–2094"),
kbdi    = c("450", "450", "450",
"600", "600", "600"),
n_wells = c(nrow(subset(wells_kbdi, kbdi_max_2017 >= 450 &
kbdi_max_2017 < 600)),
nrow(subset(wells_kbdi, kbdi_max_2050 >= 450 &
kbdi_max_2050 < 600)),
nrow(subset(wells_kbdi, kbdi_max_2090 >= 450 &
kbdi_max_2090 < 600)),
nrow(subset(wells_kbdi, kbdi_max_2017 >= 600)),
nrow(subset(wells_kbdi, kbdi_max_2050 >= 600)),
nrow(subset(wells_kbdi, kbdi_max_2090 >= 600))))
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells, fill = kbdi),
stat = "identity", position = "stack") +
scale_fill_manual(values = c("#AD8ABB", "#ffb3df")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0b
# exports figures
ggsave(filename = "figure_0b.png", plot = figure_0b, device = "png",
height = 2, width = 4, path = "output/figures/components/")
# figure 0a ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_0a <-
ggplot()  +
geom_vline(aes(xintercept = 1990), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2000), lwd = 0.2, color = "gray") +
geom_vline(aes(xintercept = 2010), lwd = 0.2, color = "gray") +
geom_bar(data = wildfires_area_year, aes(year, area_burned_ha),
stat = "identity", fill = "red", alpha = 0.2) +
# geom_smooth(data = wildfires_area_year, aes(year, area_burned_ha),
#             method = "lm", formula = y ~ x, se = FALSE,
#             color = "red", lwd = 0.6, alpha = 0.3) +
geom_smooth(data = wells_wildfires_year, aes(year, n_wells),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", lwd = 0.8, alpha = 0.3) +
geom_smooth(data = pop_exposed_year, aes(year, pop_exposed_n),
method = "lm", formula = y ~ x, se = FALSE,
color = "black", linetype = "dashed", lwd = 0.8, alpha = 0.3) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.text.y  = element_blank(),
axis.line.y  = element_blank(),
axis.ticks.y  = element_blank(),
legend.position = "none")
figure_0a
# exports figures
ggsave(filename = "figure_0a.png", plot = figure_0a, device = "png",
height = 2, width = 4, path = "output/figures/components/")
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells, fill = kbdi),
stat = "identity", position = "stack") +
scale_fill_manual(values = c("#000000", "#000000")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0b
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells, fill = kbdi),
stat = "identity", position = "stack") +
scale_fill_manual(values = c("darkgray", "darkgray")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0b
# exports figures
ggsave(filename = "figure_0b.png", plot = figure_0b, device = "png",
height = 2, width = 4, path = "output/figures/components/")
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells), color = "darkgray", stat = "identity") +
# scale_fill_manual(values = c("darkgray", "darkgray")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0b
# makes figure
figure_0b <- data_0b %>%
ggplot()  +
geom_bar(aes(period, n_wells), fill = "darkgray", stat = "identity") +
# scale_fill_manual(values = c("darkgray", "darkgray")) +
labs(x = "", y = "") +
ylim(0, 1200000)  +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
figure_0b
# exports figures
ggsave(filename = "figure_0b.png", plot = figure_0b, device = "png",
height = 2, width = 4, path = "output/figures/components/")
View(pop_exposed_year)
read_csv("data/processed/pop_exposed_state_year.csv") %>%
group_by(year) %>%
summarize(pop_exposed_n = sum(pop_exposed_n)) %>% View
m1 <- lm(wells_wildfires_year, n_wells ~ year)
m1 <- lm(data = wells_wildfires_year, n_wells ~ year)
summary(m1)
?predict
predict(m1, year = 2019)
wells_wildfires_year <-
read_csv("data/processed/wells_wildfire_state_year.csv")
wells_wildfires_year <-
read_csv("data/processed/wells_wildfire_state_year.csv") %>%
filter(year %in% c(1984:2019)) %>%
group_by(year)
m1 <- lm(data = wells_wildfires_year, n_wells ~ year)
predict(m1, year = 2019)
predict.lm(m1)
predict(m1, yaer = 2019)
predict(m1, year = 2019)
predict(lm(formula = n_wells ~ year + state, data = wells_wildfires_year), year = 2019)
predict(lm(formula = n_wells ~ year, data = wells_wildfires_year), year = 2019)
p <- predict(lm(formula = n_wells ~ year, data = wells_wildfires_year), data.frame(year = 2019))
print(p)
wells_wildfires_year <-
read_csv("data/processed/wells_wildfire_state_year.csv") %>%
filter(year %in% c(1984:2019)) %>%
group_by(year) %>%
summarize(n_wells = sum(n_wells))
p <- predict(lm(formula = n_wells ~ year, data = wells_wildfires_year), data.frame(year = 2019))
print(p)
pop_exposed_year <-
read_csv("data/processed/pop_exposed_state_year.csv") %>%
group_by(year) %>%
summarize(pop_exposed_n = sum(pop_exposed_n))
p <- predict(lm(formula = pop_exposed_n ~ year, data = pop_exposed_year), data.frame(year = 2019))
print(p)
knitr::opts_chunk$set(echo=FALSE)
source("../../code/0-setup/01-setup.R")
wells_wildfire_state_year <-
read_csv("../../data/processed/wells_wildfire_state_year.csv") %>%
filter(year %in% c(1984:2019))
d <- wells_wildfire_state_year %>%
group_by(year) %>%
summarize(n_wells = sum(n_wells))
summary(d$n_wells)
sd(d$n_wells)
d <- wells_wildfire_state_year %>%
filter(year %in% c(1984:2020)) %>%
group_by(state) %>%
summarize(n = sum(n_wells),
n_wells_buffer_1km = sum(n_wells_buffer_1km))
d
d <- wells_wildfire_state_year %>%
filter(year %in% c(1984:2020)) %>%
group_by(year) %>%
summarize(n = sum(n_wells),
n_wells_buffer_1km = sum(n_wells_buffer_1km))
write_csv(d, "../../output/results/wells_wildfire_state_year.csv")
d
wells_wildfire_state_year %>%
group_by(year) %>%
summarize(n = sum(n_wells)) %>%
ggplot() +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "Year", y = "Wells (n)") +
theme_classic()
wells_wildfire_state_year %>%
filter(year %in% c(1984:2019)) %>%  # omitting 2020 with incomplete fire data
group_by(year) %>%
summarize(n = sum(n_wells)) %>%
ggplot(aes(year, n)) +
geom_point() +
geom_smooth(method = "lm", color = "black") +
geom_smooth(method = "lm", color = "blue", formula = y ~ poly(x, 2)) +
labs(x = "Year", y = "Wells (n)") +
theme_classic()
#model_fit <- glm(n_wells ~ year,
model_fit <- glm(log(n_wells + 1) ~ year,
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells ~ year + factor(state),
data = wells_wildfire_state_year)
summary(model_fit)
wells_wildfire_state_year %>%
group_by(year) %>%
summarize(n = sum(n_wells_buffer_1km)) %>%
ggplot() +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "Year", y = "Wells (n)") +
theme_classic()
wells_wildfire_state_year %>%
filter(year %in% c(1984:2019)) %>%  # omitting 2020 with incomplete fire data
group_by(year) %>%
summarize(n = sum(n_wells_buffer_1km)) %>%
ggplot(aes(year, n)) +
geom_point() +
geom_smooth(method = "lm", color = "black") +
geom_smooth(method = "lm", color = "blue", formula = y ~ poly(x, 2)) +
labs(x = "Year", y = "Wells (n)") +
theme_classic()
model_fit <- glm(n_wells_buffer_1km ~ year + factor(state),
data = wells_wildfire_state_year)
summary(model_fit)
wells_wildfire_state_year %>%
group_by(state) %>%
summarize(n_wells_by_state = sum(n_wells),
n_wells_buffer_1km_by_state = sum(n_wells_buffer_1km)) %>%
arrange(desc(n_wells_by_state))
wells_wildfire_state_year %>%
group_by(state) %>%
summarize(n = sum(n_wells)) %>%
ggplot() +
geom_bar(aes(state, n), stat = "identity") +
labs(x = "State", y = "Wells (n)") +
theme_classic()
wells_wildfire_state_year %>%
filter(year %in% c(1984:2020)) %>%
group_by(state, year) %>%
summarize(n = sum(n_wells),
n_wells_buffer_1km = sum(n_wells_buffer_1km))
wells_wildfire_state_year %>%
group_by(state, year) %>%
summarize(n = sum(n_wells)) %>%
ggplot() +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "Year", y = "Wells (n)") +
facet_wrap(. ~ state) +
theme_classic()
wells_wildfire_state_year %>%
filter(year %in% c(1984:2019)) %>%  # omitting 2020 with incomplete fire data
group_by(state, year) %>%
summarize(n = sum(n_wells)) %>%
ggplot(aes(year, n)) +
geom_point() +
geom_smooth(method = "lm", color = "black") +
geom_smooth(method = "lm", color = "blue", formula = y ~ poly(x, 2)) +
labs(x = "Year", y = "Wells (n)") +
facet_wrap(. ~ state) +
theme_classic()
model_fit <- glm(log(n_wells) ~ year,
data = subset(wells_wildfire_state_year, state == "CA"))
model_fit <- glm(log(n_wells + 1) ~ year,
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,# family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,# family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,# family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "CA"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,
data = subset(wells_wildfire_state_year, state == "OK"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "OK"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,
data = subset(wells_wildfire_state_year, state == "TX"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "TX"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,
data = subset(wells_wildfire_state_year, state == "KS"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "KS"))
summary(model_fit)
model_fit <- glm(n_wells ~ year,
data = subset(wells_wildfire_state_year, state == "NM"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "NM"))
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = subset(wells_wildfire_state_year, state == "WY"))
summary(model_fit)
#model_fit <- glm(n_wells ~ year,
model_fit <- glm(log(n_wells + 1) ~ year,
data = wells_wildfire_state_year)
summary(model_fit)
#model_fit <- glm(n_wells ~ year,
model_fit <- glm(log(n_wells + 1) ~ year, family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells ~ year,# family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells ~ year, family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells ~ year + factor(state), family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells_buffer_1km ~ year + factor(state),
data = wells_wildfire_state_year)
summary(model_fit)
model_fit <- glm(n_wells_buffer_1km ~ year + factor(state), family = "poisson",
data = wells_wildfire_state_year)
summary(model_fit)
knitr::opts_chunk$set(echo=FALSE)
source("../../code/0-setup/01-setup.R")
pop_exposed_state_year <-
read_csv("../../data/processed/pop_exposed_state_year.csv")
d <- pop_exposed_state_year %>%
group_by(year) %>%
summarize(pop_exposed_n = sum(pop_exposed_n))
summary(d$pop_exposed_n)
print(paste0("SD = ", round(sd(d$pop_exposed_n), digits = 1)))
pop_exposed_state_year %>%
group_by(year) %>%
summarize(n = sum(pop_exposed_n)) %>%
ggplot() +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "Year", y = "Population exposed (n)") +
theme_classic()
d <- pop_exposed_state_year %>%
group_by(year) %>%
summarize(n = round(sum(pop_exposed_n), digits = 0))
write_csv(d, "../../output/results/pop_exposed_state_year.csv")
d
pop_exposed_state_year %>%
group_by(year) %>%
summarize(n = sum(pop_exposed_n)) %>%
ggplot(aes(year, n)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
geom_smooth(method = "lm", color = "black", formula = y ~ poly(x, 3)) +
labs(x = "Year", y = "Population exposed (n)") +
theme_classic()
model_fit <- glm(pop_exposed_n ~ year + factor(state),
data = pop_exposed_state_year)
summary(model_fit)
model_fit <- glm(pop_exposed_n ~ year + factor(state), family = "poisson",
data = pop_exposed_state_year)
summary(model_fit)
model_fit <- glm(pop_exposed_n ~ year + factor(state),
data = pop_exposed_state_year)
summary(model_fit)
model_fit <- glm(pop_exposed_n ~ year,
data = subset(pop_exposed_state_year, state == "CA"))
summary(model_fit)
