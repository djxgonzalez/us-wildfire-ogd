colnames(kbdi_2050) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
?rast
# converts raster with maximum 2050 KBDI to a raster for export - `terra`
raster_kbdi_max_2050 <-
terra::rast(kbdi_max_2050, type = "xyz", crs = CRS("+init=epsg:4269"))
glimpse(kbdi_max_2050)
# converts raster with maximum 2050 KBDI to a raster for export - `terra`
raster_kbdi_max_2050 <-
terra::rast(kbdi_max_2050)
# converts raster with maximum 2050 KBDI to a raster for export - `terra`
raster_kbdi_max_2050 <-
terra::rast(kbdi_max_2050, type = "xyz")
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat, z = kbdi_max_2050) %>%
as.data.frame()
glimpse(kbdi_max_2050)
# converts raster with maximum 2050 KBDI to a raster for export - `terra`
raster_kbdi_max_2050 <-
terra::rast(kbdi_max_2050, type = "xyz")
d <- as.matrix(kbdi_max_2050)
glimpse(d)
d
View(d)
terra::rast(d, type = "xyz")
# converts raster with maximum 2050 KBDI to a raster for export - `terra`
raster_kbdi_max_2050 <-
terra::rast(d, type = "xyz")
rm(d)
ggplot(kbdi_max_2050) + geom_point(aes(x = x, y = y, color = kbdi_max_2050)) +
theme_bw()##### delete when we're done with it
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat, z = kbdi_max_2050) %>%
as.data.frame()
ggplot(kbdi_max_2050) + geom_point(aes(x = x, y = y, color = kbdi_max_2050)) +
theme_bw()##### delete when we're done with it
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
ggplot(kbdi_max_2050) + geom_point(aes(x = x, y = y, color = kbdi_max_2050)) +
theme_bw()##### delete when we're done with it
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
#dplyr::filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
ggplot(kbdi_max_2050) + geom_point(aes(x = x, y = y, color = kbdi_max_2050)) +
theme_bw()##### delete when we're done with it
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # focuses on lower 48 states
#filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts raster with maximum 2050 KBDI to a raster for export - `raster`
raster_kbdi_max_2050 <-
rasterFromXYZ(kbdi_max_2050,  crs = CRS("+init=epsg:4269"))
View(kbdi_max_2050)
e <- extent(kbdi_max_2050[, (1:2)])
e
r <- raster(e, ncol=518, nrow=520, crs= "+proj=longlat +datum=WGS84")
r_new <- rasterize(kbdi_max_2050[, 1:2], r, kbdi_max_2050[,3], fun=max)
r_new
plot(r_new)
?rasterize
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 518, nrow = 520, crs = CRS("+init=epsg:4269"))
?ncol
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector()
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector()
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
dim(latlon_2050)
e
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362,  #### I'm not sure about this
nrow = 227,
crs = CRS("+init=epsg:4269"))
kbdi_max_2050_extent <- extent(kbdi_max_2050[, (1:2)])
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362,  #### I'm not sure about this
nrow = 227,
crs = CRS("+init=epsg:4269"))
#r <- raster(e, ncol=518, nrow=520, crs= "+proj=longlat +datum=WGS84")
kbdi_max_2050_raster <-
rasterize(kbdi_max_2050[, 1:2], r, kbdi_max_2050[, 3], fun = max)
plot(v)
plot(kbdi_max_2050_raster)
kbdi_max_2050_raster
kbdi_max_2050_raster <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
plot(kbdi_max_2050_raster)
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -66.96) %>%  # focuses on lower 48 states
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts raster with maximum 2050 KBDI to a raster for export
kbdi_max_2050_extent <- extent(kbdi_max_2050[, (1:2)])
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
kbdi_max_2050_raster <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
plot(kbdi_max_2050_raster)
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # or <= -66.96 for entire lower U.S.
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts raster with maximum 2050 KBDI to a raster for export
kbdi_max_2050_extent <- extent(kbdi_max_2050[, (1:2)])
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
kbdi_max_2050_raster <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
plot(kbdi_max_2050_raster)
# removes files we no longer need
rm(fill_value, kbdi_2050_fall, kbdi_2050_spring, kbdi_2050_summer, nc_fall_2050,
kbdi_2050_spring_long, kbdi_2050_summer_long,
nc_spring_2050, nc_summer_2050, kbdi_2050_fall_long, lon_lat_2050)
rm(r)
rm(r_new)
rm(e)
rm(latlon_2050)
# removes files we no longer need
rm(fill_value, kbdi_2050_fall, kbdi_2050_spring, kbdi_2050_summer, nc_fall_2050,
kbdi_2050_spring_long, kbdi_2050_summer_long,
nc_spring_2050, nc_summer_2050, kbdi_2050_fall_long, lon_lat_2050,
kbdi_max_2050_extent, kbdi_max_2050_extent_raster)
# visualizes wildfire risk
ggplot() +
geom_point(data = kbdi_2050, aes(x = x, y = y, color = kbdi_max_2050),
size = 2, alpha = 0.5) +
scale_color_viridis(option = "inferno") +
theme_minimal()
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
brary("ncdf4")
library("graphics")
library("usethis")
library("raster")
library("viridis")
library("terra")
library("tidync")
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
nc_spring_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Spring_2046-2054_R8Y4.nc")
nc_summer_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Summer_2046-2054_R8Y4.nc")
nc_fall_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Fall_2046-2054_R8Y4.nc")
# attaches packages we need for this script
library("ncdf4")
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector()
lon_lat_2050 <- bind_cols(lon_2050, lat_2050)
colnames(lon_lat_2050) <- c("lon", "lat")
lon_lat_2050 <- as.matrix(lon_lat_2050)
rm(latlon_2050)
# KBDI data for spring 2050
kbdi_2050_spring      <- ncvar_get(nc_spring_2050, "KBDI")
fill_value            <- ncatt_get(nc_spring_2050, "KBDI", "_FillValue")
kbdi_2050_spring[kbdi_2050_spring == fill_value$value] <- NA
kbdi_2050_spring_long <- as.vector(kbdi_2050_spring)
# KBDI data for summer 2050
kbdi_2050_summer      <- ncvar_get(nc_summer_2050, "KBDI")
fill_value            <- ncatt_get(nc_summer_2050, "KBDI", "_FillValue")
kbdi_2050_summer[kbdi_2050_summer == fill_value$value] <- NA
kbdi_2050_summer_long <- as.vector(kbdi_2050_summer)
# KBDI data for fall 2050
kbdi_2050_fall      <- ncvar_get(nc_fall_2050, "KBDI")
fill_value          <- ncatt_get(nc_fall_2050, "KBDI", "_FillValue")
kbdi_2050_fall[kbdi_2050_fall == fill_value$value] <- NA
kbdi_2050_fall_long <- as.vector(kbdi_2050_fall)
# assembles all KBDI layers for 2050
kbdi_2050 <- data.frame(cbind(lon_lat_2050, kbdi_2050_spring_long,
kbdi_2050_summer_long, kbdi_2050_fall_long))
colnames(kbdi_2050) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_max_2050 <- kbdi_2050 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # or <= -66.96 for entire lower U.S.
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# removes files we no longer need
rm(fill_value, kbdi_2050_fall, kbdi_2050_spring, kbdi_2050_summer, nc_fall_2050,
kbdi_2050_spring_long, kbdi_2050_summer_long,
nc_spring_2050, nc_summer_2050, kbdi_2050_fall_long, lon_lat_2050,
kbdi_max_2050_extent, kbdi_max_2050_extent_raster)
# converts raster with maximum 2050 KBDI to a raster for export
kbdi_max_2050_extent <- extent(kbdi_max_2050[, (1:2)])
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
kbdi_max_2050_raster <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# converts raster with maximum 2050 KBDI to a raster for export
kbdi_max_2050_extent <- extent(kbdi_max_2050[, (1:2)])
# restricts raster to pixels with high KBDI, i.e., ≥ 600; makes this a binary
# indicator to set up for the next step, which is to intersect with wells
raster_kbdi_high_2050 <- raster_kbdi_max_2050
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# restricts raster to pixels with high KBDI, i.e., ≥ 600; makes this a binary
# indicator to set up for the next step, which is to intersect with wells
raster_kbdi_high_2050 <- raster_kbdi_max_2050
raster_kbdi_high_2050[raster_kbdi_high_2050$kbdi_max_2050 <  600] <- NA
raster_kbdi_high_2050$kbdi_max_2050
plot(raster_kbdi_max_2050)
glimpse(raster_kbdi_max_2050)
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
nc_spring_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# data prep ................................................................
# gets necessary variables as numeric vectors
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017 <- as.matrix(expand.grid(lon_2017, lat_2017))
rm(latlon_2017, lon_2017, lat_2017)
# KBDI data for spring 2017
kbdi_2017_spring      <- ncvar_get(nc_spring_2017, "KBDI")
fill_value            <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer      <- ncvar_get(nc_summer_2017, "KBDI")
fill_value            <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall      <- ncvar_get(nc_fall_2017, "KBDI")
fill_value          <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_max_2017 <- kbdi_2017 %>%
as_tibble() %>%
dplyr::mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::filter(kbdi_max_2017 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# removes files we no longer need
rm(fill_value, kbdi_2017_fall, kbdi_2017_spring, kbdi_2017_summer, nc_fall_2017,
kbdi_2017_spring_long, kbdi_2017_summer_long,
nc_spring_2017, nc_summer_2017, kbdi_2017_fall_long, lon_lat_2017)
# converts raster with maximum 2017 KBDI to a raster for export
raster_kbdi_max_2017 <-
rasterFromXYZ(kbdi_max_2017,  crs = CRS("+init=epsg:4269"))
# restricts raster to pixels with high KBDI, i.e., ≥ 600; makes this a binary
# indicator to set up for the next step, which is to intersect with wells
raster_kbdi_high_2017 <- raster_kbdi_max_2017
raster_kbdi_high_2017[raster_kbdi_high_2017$kbdi_max_2017 <  600] <- NA
raster_kbdi_high_2017[raster_kbdi_high_2017$kbdi_max_2017 >= 600] <- 1
raster_kbdi_max_2017
raster_kbdi_max_2050$layer
raster_kbdi_high_2050[raster_kbdi_high_2050$layer <  600] <- NA
raster_kbdi_high_2050[raster_kbdi_high_2050$layer >= 600] <- 1
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
# visualizes wildfire risk
plot(raster_kbdi_high_2050, col = "red")
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 363, nrow = 228, crs = CRS("+init=epsg:4269"))
#ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 365, nrow = 230, crs = CRS("+init=epsg:4269"))
#ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 380, nrow = 250, crs = CRS("+init=epsg:4269"))
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
#ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 360, nrow = 225, crs = CRS("+init=epsg:4269"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 360, nrow = 225, crs = CRS("+init=epsg:4269"))
#ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 350, nrow = 220, crs = CRS("+init=epsg:4269"))
#ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
kbdi_max_2050_extent_raster <-
raster(kbdi_max_2050_extent,
ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2050 <-
rasterize(kbdi_max_2050[, 1:2], kbdi_max_2050_extent_raster,
kbdi_max_2050[, 3], fun = max)
# restricts raster to pixels with high KBDI, i.e., ≥ 600; makes this a binary
# indicator to set up for the next step, which is to intersect with wells
raster_kbdi_high_2050 <- raster_kbdi_max_2050
raster_kbdi_high_2050[raster_kbdi_high_2050$layer <  600] <- NA
raster_kbdi_high_2050[raster_kbdi_high_2050$layer >= 600] <- 1
# visualizes wildfire risk
plot(raster_kbdi_max_2050, col = viridis(n = 20, option = "inferno"))
# visualizes wildfire risk
plot(raster_kbdi_high_2050, col = "red")
# exports processed raster data ............................................
saveRDS(raster_kbdi_max_2050,  "data/processed/raster_max_kbdi_2050.rds")
saveRDS(raster_kbdi_high_2050, "data/processed/raster_high_kbdi_2050.rds")
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
# attaches packages we need for this script
library("ncdf4")
library("graphics")
library("usethis")
library("raster")
library("viridis")
library("terra")
library("tidync")
# data input ...............................................................
latlon_2090 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/EndCen/WRFlatlon.nc")
nc_spring_2090 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/EndCen/Mean_KBDI_Spring_2086-2094_R8Y8.nc")
nc_summer_2090 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/EndCen/Mean_KBDI_Summer_2086-2094_R8Y8.nc")
nc_fall_2090 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/EndCen/Mean_KBDI_Fall_2086-2094_R8Y8.nc")
# data prep ................................................................
# gets necessary variables as numeric vectors
# latitude and longitude data common to all 2090 layers
lon_2090     <- ncvar_get(latlon_2090, "lon") %>% as.vector()
lat_2090     <- ncvar_get(latlon_2090, "lat") %>% as.vector()
lon_lat_2090 <- bind_cols(lon_2090, lat_2090)
colnames(lon_lat_2090) <- c("lon", "lat")
lon_lat_2090 <- as.matrix(lon_lat_2090)
rm(latlon_2090, lon_2090, lat_2090)
# KBDI data for spring 2090
kbdi_2090_spring      <- ncvar_get(nc_spring_2090, "KBDI")
fill_value            <- ncatt_get(nc_spring_2090, "KBDI", "_FillValue")
kbdi_2090_spring[kbdi_2090_spring == fill_value$value] <- NA
kbdi_2090_spring_long <- as.vector(kbdi_2090_spring)
# KBDI data for summer 2090
kbdi_2090_summer      <- ncvar_get(nc_summer_2090, "KBDI")
fill_value            <- ncatt_get(nc_summer_2090, "KBDI", "_FillValue")
kbdi_2090_summer[kbdi_2090_summer == fill_value$value] <- NA
kbdi_2090_summer_long <- as.vector(kbdi_2090_summer)
# KBDI data for fall 2090
kbdi_2090_fall      <- ncvar_get(nc_fall_2090, "KBDI")
fill_value          <- ncatt_get(nc_fall_2090, "KBDI", "_FillValue")
kbdi_2090_fall[kbdi_2090_fall == fill_value$value] <- NA
kbdi_2090_fall_long <- as.vector(kbdi_2090_fall)
# assembles all KBDI layers for 2090
kbdi_2090 <- data.frame(cbind(lon_lat_2090, kbdi_2090_spring_long,
kbdi_2090_summer_long, kbdi_2090_fall_long))
colnames(kbdi_2090) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_max_2090 <- kbdi_2090 %>%
as_tibble() %>%
filter(lon >= -124.79 & lon <= -85) %>%  # or <= -66.96 for entire lower U.S.
filter(lat >= 24.50 & lat <= 49.42) %>%
dplyr::mutate(kbdi_max_2090 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
dplyr::select(lon, lat, kbdi_max_2090) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# removes files we no longer need
rm(fill_value, kbdi_2090_fall, kbdi_2090_spring, kbdi_2090_summer, nc_fall_2090,
kbdi_2090_spring_long, kbdi_2090_summer_long,
nc_spring_2090, nc_summer_2090, kbdi_2090_fall_long, lon_lat_2090r)
# converts raster with maximum 2090 KBDI to a raster for export
kbdi_max_2090_extent <- extent(kbdi_max_2090[, (1:2)])
kbdi_max_2090_extent_raster <-
raster(kbdi_max_2090_extent,
ncol = 362, nrow = 227, crs = CRS("+init=epsg:4269"))
raster_kbdi_max_2090 <-
rasterize(kbdi_max_2090[, 1:2], kbdi_max_2090_extent_raster,
kbdi_max_2090[, 3], fun = max)
# restricts raster to pixels with high KBDI, i.e., ≥ 600; makes this a binary
# indicator to set up for the next step, which is to intersect with wells
raster_kbdi_high_2090 <- raster_kbdi_max_2090
raster_kbdi_high_2090[raster_kbdi_high_2090$layer <  600] <- NA
raster_kbdi_high_2090[raster_kbdi_high_2090$layer >= 600] <- 1
# visualizes wildfire risk
plot(raster_kbdi_max_2090, col = viridis(n = 20, option = "inferno"))
# visualizes wildfire risk
plot(raster_kbdi_high_2090, col = "red")
# exports processed raster data ............................................
saveRDS(raster_kbdi_max_2090,  "data/processed/raster_max_kbdi_2090.rds")
saveRDS(raster_kbdi_high_2090, "data/processed/raster_high_kbdi_2090.rds")
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
