geom_point(size = 2, alpha = 0.5) +
scale_color_viridis(direction = -1) +
theme_minimal()+
geom_point(data = active_wells, color = "red",
alpha = .5) +
coord_cartesian()
cali_xyz <- xyz %>%
filter(x > -127 & x < -112 & y > 30 & y < 44)
ggplot(data = cali_xyz, aes(x = x, y = y, color = z)) +
geom_point(size = 2, alpha = 0.5) +
scale_color_viridis(direction = -1) +
theme_minimal()+
geom_point(data = active_wells, color = "red",
alpha = .5) +
coord_cartesian()
active_wells
ggplot(data = cali_xyz, aes(x = x, y = y, color = z)) +
geom_point(size = 2, alpha = 0.5) +
scale_color_viridis(direction = -1) +
theme_minimal()+
geom_sf(data = active_wells, color = "red", alpha = .5) +
coord_cartesian()
ggplot() +
geom_point(data = cali_xyz, aes(x = x, y = y, color = z),
size = 2, alpha = 0.5) +
scale_color_viridis(direction = -1) +
theme_minimal()+
geom_sf(data = active_wells, color = "red", alpha = .5) +
coord_cartesian()
ggplot() +
geom_point(data = cali_xyz, aes(x = x, y = y, color = z),
size = 2, alpha = 0.5) +
scale_color_viridis(direction = -1) +
theme_minimal()+
geom_sf(data = active_wells, color = "red", alpha = .5) #+
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
# attaches packages we need for this script
library("ncdf4")
# attaches packages we need for this script
library("ncdf4")
library("graphics")
library("usethis")
library("raster")
library("tidync")
# data input ...............................................................
latlon_2017 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/PRISMlatlon.nc")
nc_spring_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Spring_2017.nc")
# gets necessary variables as numeric vectors
lon_2017     <- ncvar_get(latlon_2017, "lon") %>% as.vector()
lat_2017     <- ncvar_get(latlon_2017, "lat") %>% as.vector()
kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") %>% as.vector()
kbdi_2017_sp[is.nan(kbdi_2017_sp)] <- NA
# converts to data frame
kbdi_2017_spring <- as.data.frame(cbind(x = lon_2017,
y = lat_2017,
z = kbdi_2017_sp))
?rasterFromXYZ
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
+towgs84=0,0,0"))
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
crs = CRS("+proj=longlat +ellps=WGS84 +no_defs  +towgs84=0,0,0"))
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
crs = CRS("+init=epsg:4269 +proj=longlat +ellps=GRS80
+datum=NAD83 +no_defs +towgs84=0,0,0"))
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
crs = CRS("+proj=longlat +ellps=NAD83
+datum=NAD83 +no_defs +towgs84=0,0,0"))
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs +towgs84=0,0,0"))
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs +towgs84=0,0,0"))
crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"))
?rasterize
library("sp")
# converts to data frame
# kbdi_2017_spring <- as.data.frame(cbind(x = lon_2017,
#                                         y = lat_2017,
#                                         z = kbdi_2017_sp))
# make the SpatialPointsDataFrame object
spdf <- SpatialPointsDataFrame(coords      = c(lon_2017, lat_2017),
data        = kbdi_2017_sp,
proj4string = crs_nad8)
?cbind
# converts to data frame
# kbdi_2017_spring <- as.data.frame(cbind(x = lon_2017,
#                                         y = lat_2017,
#                                         z = kbdi_2017_sp))
# make the SpatialPointsDataFrame object
spdf <- SpatialPointsDataFrame(coords      = cbind(lon_2017, lat_2017),
data        = kbdi_2017_sp,
proj4string = crs_nad8)
# converts to data frame
kbdi_2017_spring <- as.data.frame(cbind(x = lon_2017,
y = lat_2017,
z = kbdi_2017_sp))
View(kbdi_2017_spring)
# gets necessary variables as numeric vectors
lon_2017     <- ncvar_get(latlon_2017, "lon") #%>% as.vector()
lat_2017     <- ncvar_get(latlon_2017, "lat") #%>% as.vector()
kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") #%>% as.vector()
# gets necessary variables as numeric vectors
lon_2017     <- ncvar_get(latlon_2017, "lon") #%>% as.vector()
lat_2017     <- ncvar_get(latlon_2017, "lat") #%>% as.vector()
kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") #%>% as.vector()
kbdi_2017_sp[is.nan(kbdi_2017_sp)] <- NA
lonlatkbdi  <- as.matrix(expand.grid(lon, lat, kbdi_2017_sp))
kbdi_2017_sp <- ncatt_get(nc_spring_2017, "KBDI") #%>% as.vector()
#kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") #%>% as.vector()
kbdi_2017_sp[is.nan(kbdi_2017_sp)] <- NA
View(kbdi_2017_spring)
kbdi_2017_sp <- ncatt_get(nc_spring_2017, "KBDI") #%>% as.vector()
#kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") #%>% as.vector()
kbdi_2017_sp[is.nan(kbdi_2017_sp)] <- NA
View(kbdi_2017_sp)
kbdi_2017_sp <- ncatt_get(nc_spring_2017, "KBDI") #%>% as.vector()
kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") #%>% as.vector()
kbdi_2017_sp_fv <- ncatt_get(nc_spring_2017, "KBDI") #%>% as.vector()
attributes(kbdi_2017_sp)
attributes(kbdi_2017_sp_fv)
# gets necessary variables as numeric vectors
lon_2017     <- ncvar_get(latlon_2017, "lon") #%>% as.vector()
lat_2017     <- ncvar_get(latlon_2017, "lat") #%>% as.vector()
kbdi_2017_sp <- ncvar_get(nc_spring_2017, "KBDI") #%>% as.vector()
fill_value   <- ncatt_get(nc_spring_2017, "KBDI") #%>% as.vector()
fill_value   <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue") #%>% as.vector()
kbdi_2017_sp[kbdi_2017_sp == fill_value$value] <- NA
kbdi_2017_sp
lonlatkbdi  <- as.matrix(expand.grid(lon, lat))
lon_lat  <- as.matrix(expand.grid(lon, lat))
lon_lat_2017  <- as.matrix(expand.grid(lon_2017, lat_2017))
dim(lon_lat_2017)
head(lon_lat_2017)
colnames(lon_lat_2017) <- c("lon", "lat")
lon_lat_2017  <- as.matrix(expand.grid(lon_2017, lat_2017))
colnames(lon_lat_2017) <- c("lon", "lat")
head(lon_lat_2017)
kbdi_2017_sp_long <- as.vector(kbdi_2017_sp)
lon_lat_2017  <- as.matrix(expand.grid(lon_2017, lat_2017))
kbdi_2017_spring <- data.frame(cbind(lon_lat_2017, kbdi_2017_sp_long))
kbdi_2017_spring
lon_lat_2017  <- as.matrix(expand.grid(lon_2017, lat_2017))
kbdi_2017_spring <- data.frame(cbind(lon_lat_2017, kbdi_2017_sp_long))
colnames(lon_lat_2017) <- c("lon", "lat", "kbdi")
lon_lat_2017  <- as.matrix(expand.grid(lon_2017, lat_2017))
kbdi_2017_spring <- data.frame(cbind(lon_lat_2017, kbdi_2017_sp_long))
colnames(kbdi_2017_spring) <- c("lon", "lat", "kbdi")
head(kbdi_2017_spring)
View(kbdi_2017_spring)
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs +towgs84=0,0,0"))
crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"))
# plots the raster
fig <- ggplot() +
geom_tile(data = kbdi_2017_spring,
aes(x = x, y = y, fill = z, alpha = 0.8)) +
theme_bw()
fig
# plots the raster
fig <- ggplot() +
geom_tile(data = kbdi_2017_spring,
aes(x = lon, y = lat, fill = kbdi)) +
theme_bw()
fig
plot(kbdi_2017_spring)
1+2
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs +towgs84=0,0,0"))
crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"))
plot(kbdi_2017_spring_raster)
# converts to a raster for additional analyses
kbdi_2017_spring_raster <-
rasterFromXYZ(kbdi_2017_spring,
crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs +towgs84=0,0,0"))
#crs = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs +towgs84=0,0,0"))
plot(kbdi_2017_spring_raster)
nc_summer_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Summer_2017.nc")
nc_fall_2017 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/2017/Mean_KBDI_Fall_2017.nc")
# latitude and longitude data common to all 2017 layers
lon_2017     <- ncvar_get(latlon_2017, "lon")
lat_2017     <- ncvar_get(latlon_2017, "lat")
lon_lat_2017  <- as.matrix(expand.grid(lon_2017, lat_2017))
# KBDI data for spring 2017
kbdi_2017_spring <- ncvar_get(nc_spring_2017, "KBDI")
fill_value   <- ncatt_get(nc_spring_2017, "KBDI", "_FillValue")
kbdi_2017_spring[kbdi_2017_spring == fill_value$value] <- NA
kbdi_2017_spring_long <- as.vector(kbdi_2017_spring)
# KBDI data for summer 2017
kbdi_2017_summer <- ncvar_get(nc_summer_2017, "KBDI")
fill_value   <- ncatt_get(nc_summer_2017, "KBDI", "_FillValue")
kbdi_2017_summer[kbdi_2017_summer == fill_value$value] <- NA
kbdi_2017_summer_long <- as.vector(kbdi_2017_summer)
# KBDI data for fall 2017
kbdi_2017_fall <- ncvar_get(nc_fall_2017, "KBDI")
fill_value   <- ncatt_get(nc_fall_2017, "KBDI", "_FillValue")
kbdi_2017_fall[kbdi_2017_fall == fill_value$value] <- NA
kbdi_2017_fall_long <- as.vector(kbdi_2017_fall)
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_summer_long, kbdi_fall_long))
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
kbdi_2017
head(kbdi_2017)
View(kbdi_2017)
# finds max KBDI value for across the three seasons
kbdi_2017b <- kbdi_2017 %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
select(lon, lat, kbdi_max_2017)
# finds max KBDI value for across the three seasons
kbdi_2017b <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
select(lon, lat, kbdi_max_2017) %>%
as.data.frame()
# finds max KBDI value for across the three seasons
kbdi_2017b <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
#select(lon, lat, kbdi_max_2017) %>%
as.data.frame()
View(kbdi_2017b)
?select
# finds max KBDI value for across the three seasons
kbdi_2017b <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
as.data.frame()
kbdi_2017b
glimpse(kbdi_2017b)
# finds max KBDI value for across the three seasons
kbdi_2017b <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017,
crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
+towgs84=0,0,0"))
plot(kbdi_2017_raster)
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017,
crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
+towgs84=0,0,0"))
plot(kbdi_2017_raster)
?rasterFromXYZ
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017,
crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
+towgs84=0,0,0"))
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017,
crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
+towgs84=0,0,0"))
plot(kbdi_2017_raster)
head(kbdi_2017)
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017)#,
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster)
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
ggplot() +
geom_tile(data = kbdi_2017_raster, aes(fill = kbdi_max_2017))
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
ggplot() +
geom_tile(data = kbdi_2017_raster, aes(fill = factor(kbdi_max_2017)))
?plopt
?plot
# attaches packages we need for this script
library("rcolorbrewer")
install.packages("rcolorbrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
# attaches packages we need for this script
library("RColorBrewer")
library("viridis")
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis)
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis())
?viridis
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis(n = 10))
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis(n = 20))
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 > 0) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# assembles all KBDI layers for 2017
kbdi_2017 <- data.frame(cbind(lon_lat_2017, kbdi_2017_spring_long,
kbdi_2017_summer_long, kbdi_2017_fall_long))
colnames(kbdi_2017) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2017 <- kbdi_2017 %>%
as_tibble() %>%
mutate(kbdi_max_2017 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2017 > 0) %>%
#filter(kbdi_max_2017 >= 600) %>%  # KBDI â‰¥ 600 is considered high wildfire risk
dplyr::select(lon, lat, kbdi_max_2017) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017)#,
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
crs(kbdi_2017_raster)
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017, crs = CRS("+init=epsg:4326"))#,
##### need to sort this out
#crs = CRS("+proj=longlat +ellps=NAD83 +datum=NAD83 +no_defs
#          +towgs84=0,0,0"))
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# converts to a raster for additional analyses
kbdi_2017_raster <-
rasterFromXYZ(kbdi_2017, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2017_raster, col = viridis(n = 20, option = "inferno"))
# exports processed raster data
saveRDS(kbdi_2017_raster, "data/processed/raster_max_kbdi_2017.rds")
# loads necessary packages and defines global variables
source("code/0-setup/01-setup.R")
k17 <- readRDS("data/processed/raster_max_kbdi_2017.rds")
plot(k17)
crs(k17)
rm(k17)
hand
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
nc_spring_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Spring_2046-2054.nc")
nc_summer_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Summer_2046-2054.nc")
nc_fall_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Fall_2046-2054.nc")
# data prep ................................................................
# gets necessary variables as numeric vectors
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon")
lat_2050     <- ncvar_get(latlon_2050, "lat")
lon_lat_2050  <- as.matrix(expand.grid(lon_2050, lat_2050))
# KBDI data for spring 2050
kbdi_2050_spring <- ncvar_get(nc_spring_2050, "KBDI")
fill_value   <- ncatt_get(nc_spring_2050, "KBDI", "_FillValue")
kbdi_2050_spring[kbdi_2050_spring == fill_value$value] <- NA
kbdi_2050_spring_long <- as.vector(kbdi_2050_spring)
# KBDI data for summer 2050
kbdi_2050_summer <- ncvar_get(nc_summer_2050, "KBDI")
fill_value   <- ncatt_get(nc_summer_2050, "KBDI", "_FillValue")
kbdi_2050_summer[kbdi_2050_summer == fill_value$value] <- NA
kbdi_2050_summer_long <- as.vector(kbdi_2050_summer)
# KBDI data for fall 2050
kbdi_2050_fall <- ncvar_get(nc_fall_2050, "KBDI")
fill_value   <- ncatt_get(nc_fall_2050, "KBDI", "_FillValue")
kbdi_2050_fall[kbdi_2050_fall == fill_value$value] <- NA
kbdi_2050_fall_long <- as.vector(kbdi_2050_fall)
# assembles all KBDI layers for 2050
kbdi_2050 <- data.frame(cbind(lon_lat_2050, kbdi_2050_spring_long,
kbdi_2050_summer_long, kbdi_2050_fall_long))
colnames(kbdi_2050) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
# finds max KBDI value for across the three seasons
kbdi_2050 <- kbdi_2050 %>%
as_tibble() %>%
mutate(kbdi_max_2050 = pmax(kbdi_spring, kbdi_summer, kbdi_fall)) %>%
filter(kbdi_max_2050 > 0) %>%
dplyr::select(lon, lat, kbdi_max_2050) %>%
dplyr::rename(x = lon, y = lat) %>%
as.data.frame()
# converts to a raster for additional analyses
kbdi_2050_raster <-
rasterFromXYZ(kbdi_2050, crs = CRS("+init=epsg:4269"))  # NAD83 CRS
# visualizes wildfire risk
plot(kbdi_2050_raster, col = viridis(n = 20, option = "inferno"))
# exports processed raster data ............................................
saveRDS(kbdi_2050_raster, "data/processed/raster_max_kbdi_2050.rds")
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
nc_spring_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Spring_2046-2054.nc")
nc_spring_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Spring_2046-2054_R8Y4.nc")
nc_summer_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Summer_2046-2054_R8Y4.nc")
nc_fall_2050 <-
nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/Mean_KBDI_Fall_2046-2054_R8Y4.nc")
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon")
lat_2050     <- ncvar_get(latlon_2050, "lat")
lon_lat_2050  <- as.matrix(expand.grid(lon_2050, lat_2050))
# KBDI data for spring 2050
kbdi_2050_spring <- ncvar_get(nc_spring_2050, "KBDI")
fill_value   <- ncatt_get(nc_spring_2050, "KBDI", "_FillValue")
kbdi_2050_spring[kbdi_2050_spring == fill_value$value] <- NA
kbdi_2050_spring_long <- as.vector(kbdi_2050_spring)
# KBDI data for summer 2050
kbdi_2050_summer <- ncvar_get(nc_summer_2050, "KBDI")
fill_value   <- ncatt_get(nc_summer_2050, "KBDI", "_FillValue")
kbdi_2050_summer[kbdi_2050_summer == fill_value$value] <- NA
kbdi_2050_summer_long <- as.vector(kbdi_2050_summer)
# KBDI data for fall 2050
kbdi_2050_fall <- ncvar_get(nc_fall_2050, "KBDI")
fill_value   <- ncatt_get(nc_fall_2050, "KBDI", "_FillValue")
kbdi_2050_fall[kbdi_2050_fall == fill_value$value] <- NA
kbdi_2050_fall_long <- as.vector(kbdi_2050_fall)
# assembles all KBDI layers for 2050
kbdi_2050 <- data.frame(cbind(lon_lat_2050, kbdi_2050_spring_long,
kbdi_2050_summer_long, kbdi_2050_fall_long))
colnames(kbdi_2050) <- c("lon", "lat", "kbdi_spring", "kbdi_summer",
"kbdi_fall")
lon_lat_2050 <- as.matrix(expand.grid(lon_2050, lat_2050))
latlon_2050
lon_lat_2050 <- as.matrix(expand.grid(lon_2050, lat_2050))
# data input ...............................................................
latlon_2050 <- nc_open("data/raw/kbdi_wildfire_risk/KBDI/MidCen/WRFlatlon.nc")
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon")
lat_2050     <- ncvar_get(latlon_2050, "lat")
lat_2050     <- ncvar_get(latlon_2050, "lat") %>% as.vector()
# latitude and longitude data common to all 2050 layers
lon_2050     <- ncvar_get(latlon_2050, "lon") %>% as.vector()
# KBDI data for spring 2050
kbdi_2050_spring      <- ncvar_get(nc_spring_2050, "KBDI")
fill_value            <- ncatt_get(nc_spring_2050, "KBDI", "_FillValue")
lon_lat_2050 <- as.matrix(expand.grid(lon_2050, lat_2050))
