<<<<<<< Updated upstream
figure_2a
View(d)
d %>% filter(wildfier_id == "45800") %>% plot
d %>% filter(wildfire_id == "45800") %>% plot
d %>% filter(wildfire_id == "45800") %>% st_geometry() %>% plot
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 100000)) %>%
group_by(year) %>%
summarize(area_burned_m2 = sum(wildfire_area_m2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_m2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
legend.position = "none")
figure_2a
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 100000)) %>%
group_by(year) %>%
summarize(area_burned_m2 = sum(wildfire_area_m2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_m2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2a
1/ 100000
1/ 1000000
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_m2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_m2 = sum(wildfire_area_m2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_m2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_m2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2a
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_km2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2a
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2b ................................................................
figure_2b <- wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>%
ggplot()  +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2b
# figure 2b ................................................................
figure_2b <- wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>%
ggplot()  +
=======
ggplot() +
>>>>>>> Stashed changes
geom_bar(aes(year, n), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
legend.position = "none")
figure_2b
# figure 2b ................................................................
figure_2b <- wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>%
ggplot()  +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_km2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() #+
figure_2a
figure_2a
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_km2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() #+
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_km2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2b ................................................................
figure_2b <- wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>%
ggplot()  +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>% View
wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>% View
wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>% View
wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>% View
a
# figure 2a ................................................................
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_km2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2b ................................................................
figure_2b <- wildfires_wells_population %>%
filter(n_wells > 0) %>%
group_by(year) %>%
summarize(n = n()) %>%
ggplot()  +
geom_bar(aes(year, n), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 2, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 2, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 4, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 6, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 10, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 10, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2b.png", plot = figure_2b, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2c ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_2c <- wildfires_wells_population %>%
group_by(year) %>%
summarize(n_wells = sum(n_wells)) %>%
ggplot()  +
geom_bar(aes(year, n_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2c
# exports figures
ggsave(filename = "figure_2c.png", plot = figure_2c, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2c ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_2c <- wildfires_wells_population %>%
group_by(year) %>%
summarize(n_wells = sum(n_wells)) %>%
ggplot()  +
geom_bar(aes(year, n_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
legend.position = "none")
figure_2c
# figure 2c ................................................................
# count of oil and gas wells in wildfire burn areas by year
figure_2c <- wildfires_wells_population %>%
group_by(year) %>%
summarize(n_wells = sum(n_wells)) %>%
ggplot()  +
geom_bar(aes(year, n_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2c
ggplot()  +
geom_bar(aes(year, perc_wildfires_with_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2d
library("lubridate")
ggplot()  +
geom_bar(aes(year, perc_wildfires_with_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_bar(aes(year, perc_wildfires_with_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2d
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_point(aes(year, perc_wildfires_with_wells)) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2d
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_point(aes(year, perc_wildfires_with_wells)) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
legend.position = "none")
figure_2d
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_line(aes(year, perc_wildfires_with_wells)) +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
legend.position = "none")
figure_2d
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_bar(aes(year, perc_wildfires_with_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
#axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2d.png", plot = figure_2d, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_bar(aes(year, perc_wildfires_with_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2d.png", plot = figure_2d, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# figure 2d ................................................................
# proportion of wildfires that burned wells by year
figure_2d <- wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(year) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(perc_wildfires_with_wells =
round((100 * n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot()  +
geom_bar(aes(year, perc_wildfires_with_wells), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.text.y  = element_blank(),
legend.position = "none")
# exports figures
ggsave(filename = "figure_2d.png", plot = figure_2d, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
# exports figures
ggsave(filename = "figure_2d.png", plot = figure_2d, device = "png",
height = 1.8, width = 6, path = "output/figures/components/")
# figure 2a ................................................................
# total area burned by year
figure_2a <- wildfires_wells_population %>%
mutate(year = as.factor(year),
wildfire_area_km2 = (as.numeric(wildfire_area_m2) / 1000000)) %>%
group_by(year) %>%
<<<<<<< Updated upstream
summarize(area_burned_km2 = sum(wildfire_area_km2)) %>%
ggplot() +
geom_bar(aes(year, area_burned_km2), stat = "identity") +
labs(x = "", y = "") +
theme_classic() +
theme(axis.line.x  = element_blank(),  # removes x-axis
axis.ticks.x = element_blank(),
axis.text.x  = element_blank(),
axis.text.y  = element_blank(),
legend.position = "none")
figure_2a
# exports figures
ggsave(filename = "figure_2a.png", plot = figure_2a, device = "png",
height = 1.5, width = 6, path = "output/figures/components/")
length(unique(wildfire_all$wildfire_id))
d <- wildfire_all %>% distinct(wildfire_id, .keep_all = T)
sum(d$wildfire_area_m2)
725908393223/1000000
=======
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(proportion_wildfires_with_wells =
round((n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot(aes(year, proportion_wildfires_with_wells)) +
geom_bar(stat = "identity") +
theme_classic()
wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(state) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(proportion_wildfires_with_wells =
round((n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot(aes(year, proportion_wildfires_with_wells)) +
geom_bar(stat = "identity") +
theme_classic()
wildfires_wells_population %>%
mutate(wildfire_burned_wells = case_when(n_wells >= 1 ~ 1,
n_wells == 0 ~ 0)) %>%
group_by(state) %>%
summarize(n_wildfires = n(),
n_wildfires_with_wells = sum(wildfire_burned_wells)) %>%
mutate(proportion_wildfires_with_wells =
round((n_wildfires_with_wells / n_wildfires), digits = 2)) %>%
ggplot(aes(state, proportion_wildfires_with_wells)) +
geom_bar(stat = "identity") +
theme_classic()
source("code/2-exposure_assessment/05-fxn-assess_expousure_wells_population.R")
source("code/2-exposure_assessment/05-fxn-assess_exposure_wells_population.R")
assessExposurePopulationNearWellsWildfire <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# omits wells where the year of the earliest operational date was after the
# year of the wildfire; retains NA dates, too, presumed to pre-date the
# study period given poor record keeping prior to 1980s
wells <- wells %>% filter(year(date_earliest) <= wildfire$year |
is.na(date_earliest))
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
assessExposurePopWellsWildfire <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# omits wells where the year of the earliest operational date was after the
# year of the wildfire; retains NA dates, too, presumed to pre-date the
# study period given poor record keeping prior to 1980s
wells <- wells %>% filter(year(date_earliest) <= wildfire$year |
is.na(date_earliest))
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
assessPopulationWellsWildfire <-
function(wildfire,
wells,
buffer_dist,
exp_variable) {
# omits wells where the year of the earliest operational date was after the
# year of the wildfire; retains NA dates, too, presumed to pre-date the
# study period given poor record keeping prior to 1980s
wells <- wells %>% filter(year(date_earliest) <= wildfire$year |
is.na(date_earliest))
# generates buffer of given distance around the polygon
wildfire <- wildfire %>% st_buffer(dist = buffer_dist)
# counts wells within the polygon ......................................
wildfire <- wildfire %>%
mutate(!!as.name(exp_variable) :=  # flexibly names the variable on input
sum(unlist(st_intersects(wells, wildfire)))) %>%
as_tibble() %>%
dplyr::select(-geometry)
# returns the processed exposure data ..................................
return(wildfire)
}
# attaches functions .....................................................
source("code/0-setup/01-setup.R")
source("code/2-exposure_assessment/05-fxn-assess_exposure_wells_population.R")
library("parallel")   # for the `mclapply()` fxn, if using MacOS
library("lubridate")  # for `Year()` fxn
# data input .............................................................
wildfires_all <- readRDS("data/processed/wildfires_all.rds")
# restricts to wildfires near wells (i.e., intersect with 1 km well buffer)
wildfires_in <- wildfires_all %>%
filter(state == "AZ" & year %in% c(1984:1994)) %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_az_buffer_1km.rds"))
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AZ") %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_az_buffer_1km.rds")) %>%
st_transform(crs_albers)
# data input .............................................................
wells_all <- readRDS("data/processed/wells_all.rds")
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AZ") %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_az_buffer_1km.rds")) %>%
st_transform(crs_albers)
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AZ") %>%
# drops wells drilled after the period
filter(year(date_earliest) <= 1994 | is.na(date_earliest))
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "AZ") %>%
# drops wells drilled after the period
filter(year(date_earliest) <= 1994 | is.na(date_earliest)) %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_az_buffer_1km.rds")) %>%
st_transform(crs_albers)
# restricts to wildfires near wells for 1984 to 1994
wildfires_in <- wildfires_all %>%
filter(state == "CA" & year %in% c(1984:1994)) %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_ca_buffer_1km.rds"))
# restricts to wildfires near wells for 1984 to 1994
wildfires_in <- wildfires_all %>%
filter(state == "NM" & year %in% c(1984:1994)) %>%
st_as_sf() %>%
st_transform(crs_albers) %>%
st_intersection(readRDS("data/interim/wells_buffers/wells_nm_buffer_1km.rds"))
# restricts to wells near wildfires (i.e., w/in 1 km of wildfire boundaries)
wells_in <- wells_all %>%
filter(state == "NM") %>%
# drops wells drilled after the period
filter(year(date_earliest) <= 1994 | is.na(date_earliest)) %>%
st_intersection(
readRDS("data/interim/wildfires_buffers/wildfires_nm_buffer_1km.rds")) %>%
st_transform(crs_albers)
wildfires_in <- split(wildfires_in, seq(1, nrow(wildfires_in))) #converts to list
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("stars")
# gets necessary variables as numeric vectors
pop_gridded_1990 <- read_stars("data/raw/socscape/us_pop1990myc.tif") #%>%
pop_gridded_1990
plot(pop_gridded_1990, axes = TRUE)
d <- pop_gridded_1990
summary(d)
d$us_pop1990myc.tif
d[[1]]
# data input
us_states_west <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR %in% c("WA", "OR", "CA", "ID", "NV", "AZ", "MT", "WY", "UT",
"CO", "NM", "ND", "SD", "NE", "KS", "OK", "TX", "MO",
"AR", "LA")) %>%
st_transform(crs_albers)
#st_transform(crs_albers)
nm <- us_states_west %>% filter(STATE_ABBR == "NM")
plot(st_geometry(nm))
plot(pop_gridded_1990[nm])
# gets necessary variables as numeric vectors
pop_gridded_2010 <- read_stars("data/raw/socscape/us_pop2010myc.tif") #%>%
rm(d)
rm(pop_gridded_1990)
pop_nm <- pop_gridded_2010[nm]
plot(pop_nm)
pop_nm
pop_nm$value
population
pop_nm$us_pop2010myc.tif
ri <- us_states_west <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI")
pop_ri <- pop_gridded_2010[ri]
ri <- us_states_west <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI")
ri <- us_states_west <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI") %>%
st_transform(crs_albers)
pop_ri <- pop_gridded_2010[ri]
plot(pop_ri)
plot(pop_ri, text_values = TRUE, col = pal, key.pos = NULL)
rm(pop_nm)
rm(nm)
?read_stars
library("cubelyr")
install.packages("cubelyr")
library("cubelyr")
d <- as.tbl_cube(pop_gridded_2010)
pop_gridded_2010
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("stars")
# data input
us_states_west <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR %in% c("WA", "OR", "CA", "ID", "NV", "AZ", "MT", "WY", "UT",
"CO", "NM", "ND", "SD", "NE", "KS", "OK", "TX", "MO",
"AR", "LA")) %>%
st_transform(crs_albers)
# data input
pop_gridded_1990 <- read_stars("data/raw/socscape/us_pop2010myc.tif") #%>%
View(pop_gridded_1990)
pop_gridded_1990
>>>>>>> Stashed changes
