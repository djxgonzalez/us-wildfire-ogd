#   # summarize(geometry = st_union(geometry)) %>%
#   mutate(area = st_area(wildfires_sf)) ####
#   ##### adapted from redlining study:
#   #mutate(area_sqkm = (as.numeric(st_area(wildfires_all)) / 1000000))
wildfires_all %>%
distinct(wildfire_id, .keep_all = TRUE) %>%
ggplot() +
geom_bar(aes(state)) +
theme_classic()
wildfires_all %>%
distinct(wildfire_id, .keep_all = TRUE) %>%
ggplot() +
geom_bar(aes(year)) +
theme_classic()
wildfires_all %>%
distinct(wildfire_id, .keep_all = TRUE) %>%
ggplot() +
geom_bar(aes(year)) +
facet_wrap(~ state) +
theme_classic()
summary(wells_all)
print("Average duration of operation (years):")
d <- wells_all %>%
drop_na(first_prod_date) %>%
drop_na(last_prod_date) %>%
mutate(prod_duration = last_prod_date - first_prod_date) %>%
select(prod_duration)
d <- d %>% mutate(prod_duration = as.numeric(prod_duration)) %>%
filter(prod_duration > 0 & prod_duration < 32689)  # known max; removes errors
summary(as.numeric(d$prod_duration) / 365.25)
sd(as.numeric(d$prod_duration) / 365.25)
knitr::opts_chunk$set(echo=FALSE)
source("../../code/0-setup/01-setup.R")
wells_wildfire_state_year <-
readRDS("../../data/processed/wells_wildfire_state_year.rds") %>%
filter(year %in% c(1984:2019))
wells_wildfire_state_year %>% group_by(state) %>% summarize(n = sum(n_wells))
# attaches functions .....................................................
source("code/0-setup/01-setup.R")
library("lubridate")  # for `year()` function
# data input .............................................................
us_states <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
rename(state = STATE_ABBR) %>%
select(state, geometry) %>%
filter(state %in%
c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
alaska    <- st_read("data/raw/esri/USA_States_Generalized.shp") %>%
rename(state = STATE_ABBR) %>%
select(state, geometry) %>%
filter(state == "AK") %>%
st_transform(crs_alaska)
wells_all <- readRDS("data/processed/wells_all.rds") %>%
drop_na(date_earliest)
wells_all_orig <- readRDS("data/processed/wells_all.rds")
summary(wells_all)
wells_all %>% filter(date_earliest == as.date("1900-01-1")) %>% nrow
wells_all %>% filter(date_earliest == as.Date("1900-01-1")) %>% nrow
wells_all %>% filter(date_latest == as.Date("1900-01-1")) %>% nrow
summary(wells_all_orig)
wells_all %>% filter(is.na(date_earliest)) %>% nrow
wells_all_orig %>% filter(is.na(date_earliest)) %>% nrow
wells_all_orig %>% filter(is.na(date_earliest)) %>% filter(state %in%
c("CA", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "AR", "LA")) %>% nrow()
185585/nrow(wells_all_orig)
filter(is.na(date_earliest)()
wells_all_no_dates <- readRDS("data/processed/wells_all.rds") %>%
wells_all_no_dates <- readRDS("data/processed/wells_all.rds") %>%
filter(is.na(date_earliest))
wildfires_all_union <-
readRDS("data/interim/wildfires_buffers/wildfires_all_union_no_buffer.rds")
wildfires_all_union
wells_all_no_dates
# data input .............................................................
wells_all_no_dates <- readRDS("data/processed/wells_all.rds") %>%
filter(is.na(date_earliest)) %>%
st_transform(crs_albers)
wells_all_no_dates
# determines wells without dates that intersect with any wildfire
wells_no_dates_wildfires <- wells_all_no_dates %>%
sample_n(10) %>%
st_intersection(wildfires_all_union)
# determines wells without dates that intersect with any wildfire
wells_no_dates_wildfires <- wells_all_no_dates %>%
st_intersection(wildfires_all_union)
rm(wells_all)
rm(wells_all_orig)
rm(wells_no_dates_wildfires)
rm(wells_wildfire_state_year)
rm(us_states)
rm(alaska)
# determines wells without dates that intersect with any wildfire
wells_no_dates_wildfires <- wells_all_no_dates %>%
st_intersection(wildfires_all_union)
wells_kbdi <- readRDS("data/processed/wells_kbdi.rds")
write_csv(wells_kbdi, "data/processed/wells_kbdi.csv")
# data input .............................................................
wells_all_no_dates <- readRDS("data/processed/wells_all.rds") %>%
filter(is.na(date_earliest)) #%>%
# attaches functions .....................................................
source("code/0-setup/01-setup.R")
wells_all <- readRDS("data/processed/wells_all.rds")
readRDS("data/inteirm/wells_all.rds")
readRDS("data/interim/wells_all.rds")
wells_all. <- readRDS("data/processed/wells_all.rds")
wells_all. <- readRDS("data/interim/wells_all.rds")
d <- wells_all.
d$county_parish
d2 <- d %>% filter(county_parish == "SANTA BARBARA (CA)")
rm(wells_all.)
View(d2)
# attaches functions .....................................................
source("code/0-setup/01-setup.R")
source("code/2-assessment/01-fxn-count_wells_in_wildfires.R")
library("parallel")   # for the `mclapply()` fxn, if using MacOS
library("lubridate")  # for `Year()` fxn
# data input .............................................................
wells_all     <- readRDS("data/processed/wells_all.rds")
d <- readRDS("data/interim/wells_buffers/wells_ca_buffer_1km.rds")
d
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("terra")
# reads in gridded population data
population_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
population_1990@extent
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("raster")
library("terra")
# reads in gridded population data
population_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
extent(population_1990)
population_1990@extent
# reads in gridded population data
population_1990 <- rast("data/raw/socscape/us_pop1990myc.tif") %>% raster()
population_1990@extent
class(population_1990)
# generates and exports mask of study region using sf package, to import later
study_region_mask <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR %in%
c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs(population_1990))
plot(study_region_mask)
class(population_1990)
crs(population_1990)
# generates and exports mask of study region using sf package, to import later
study_region_mask <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR %in%
c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
plot(study_region_mask$geometry)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR %in%
c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
rm(study_region_mask)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR %in%
c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
"ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
# reads in gridded population data
population_1990 <-
rast("data/raw/socscape/us_pop1990myc.tif") %>%
raster() %>%
projectRaster(projectExtent(population_1990, st_crs(crs_albers)))
plot()
plot(population_1990)
plot(study_region, add = T)
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
population_1990_mask <-
raster::crop(population_1990, study_region_mask)
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
population_1990_mask <-
raster::crop(population_1990, study_region)
1+2
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("raster")
library("terra")
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, st_crs(crs_albers)))
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
pop_1990_cropped <- raster::crop(pop_1990,         study_region)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
as(class = "Spatial")  # convert to sp object
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
as(class = "Spatial")  # convert to sp object
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
as(Class = "Spatial")  # convert to sp object
study_region
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
pop_1990_cropped <- raster::crop(pop_1990,         study_region)
plot(pop_1990_cropped)
##### PICK UP HERE, CONVERT TO SP OBJECT
pop_1990_masked  <- raster::mask(pop_1990_cropped, study_region)
plot(study_region)
pop_1990_cropped
study_region
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
pop_1990_cropped <- raster::crop(pop_1990, extent(study_region))
##### PICK UP HERE, CONVERT TO SP OBJECT
pop_1990_masked  <- raster::mask(pop_1990_cropped, study_region)
isS4(pop_1990)
isS4(study_region)
isS4(as.character("34"))
##### PICK UP HERE, CONVERT TO SP OBJECT
pop_1990_masked  <- mask(pop_1990_cropped, study_region)
##### PICK UP HERE, CONVERT TO SP OBJECT
pop_1990_masked  <- mask(study_region, pop_1990_cropped)
pop_1990_cropped
crs_albers
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, crs_albers))
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, crs(5070)))
crs(5070)
st_crs(study_region)
study_region
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, st_crs(study_region)))
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, st_crs(study_region)))
isS4(study_region)
isS4(pop_1990)
st_crs(study_region)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) #%>%
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, st_crs(study_region)))
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(st_crs(5070)) #%>%
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, st_crs(study_region)))
rm(pop_1990)
rm(pop_1990_cropped)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(st_crs(5070)) #%>%
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
pop_1990 <- pop_1990 %>%
raster() %>%
projectRaster(projectExtent(pop_1990, st_crs(study_region)))
study_region <- study_region %>% as(Class = "Spatial")  # convert to sp object
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
pop_1990_cropped <- raster::crop(pop_1990, extent(study_region))
##### PICK UP HERE, CONVERT TO SP OBJECT
pop_1990_masked  <- raster::mask(pop_1990_cropped, study_region)
##### PICK UP HERE, CONVERT TO SP OBJECT
pop_1990_masked  <- raster::mask(pop_1990, study_region)
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
rm(pop_1990_cropped)
# clips population data to states to study region mask
##### next up: troubleshoot why there's no extent in study_region_mask;
##### can I convert the terra object back to raster?
pop_1990_cropped <- terra::crop(pop_1990, study_region)
plot(pop_1990_cropped)
pop_1990_masked  <- terra::mask(pop_1990, study_region)
"
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(st_crs(5070)) #%>%
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(st_crs(5070)) #%>%
study_region
pop_1990_masked  <- terra::mask(pop_1990, study_region)
# clips population data to states to study region mask
pop_1990_cropped <- terra::crop(pop_1990, study_region)
pop_1990_masked  <- terra::mask(pop_1990, study_region)
pop_1990_masked  <- terra::mask(pop_1990_cropped, study_region)
?terra:mask
?terra::mask
pop_1990_masked  <- terra::mask(pop_1990_cropped, study_region, touches = TRUE)
isS4(pop_1990)
isS4(pop_1990_cropped)
isS4(study_region)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CA") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) #%>%
isS4(study_region)
isS4(as_Spatial(study_region))
pop_1990_masked  <- terra::mask(pop_1990_cropped,
as_Spatial(study_region),
touches = TRUE)
class(vect(study_region))
pop_1990_masked  <- terra::mask(pop_1990_cropped,
vect(study_region),
touches = TRUE)
pop_1990_masked
plot(pop_1990_masked)
sum(pop_1990_masked)
1+2
values(pop_1990_masked)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) #%>%
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
# clips population data to states to study region mask
pop_1990_cropped <- terra::crop(pop_1990, study_region)
pop_1990_masked  <- terra::mask(pop_1990_cropped,
vect(study_region),
touches = TRUE)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
vect()
# attaches packages we need for this script
source("code/0-setup/01-setup.R")
library("terra")
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers) %>%
vect()
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
# clips population data to states to study region mask
pop_1990_cropped <- terra::crop(pop_1990, study_region)
# clips population data to states to study region mask
pop_1990_cropped <- terra::crop(pop_1990, vect(study_region))
pop_1990_masked  <- terra::mask(pop_1990_cropped,
vect(study_region),
touches = TRUE)
pop_1990_masked  <- terra::mask(pop_1990,
vect(study_region),
touches = TRUE)
pplot(study_region)
plot(study_region)
n
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "RI") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
# generates and exports mask of study region using sf package, to import later
study_region <-
st_read("data/raw/esri/USA_States_Generalized.shp") %>%
filter(STATE_ABBR == "CO") %>%
# filter(STATE_ABBR %in%
#          c("OR", "CA", "NV", "AZ", "MT", "WY", "UT", "CO", "NM",
#            "ND", "SD", "NE", "KS", "OK", "TX", "MO", "AR", "LA")) %>%
st_transform(crs_albers)
# reads in gridded population data
pop_1990 <- rast("data/raw/socscape/us_pop1990myc.tif")
# pop_1990 <- pop_1990 %>%
# pop_1990 <- pop_1990 %>%
#   raster() %>%
#   projectRaster(projectExtent(pop_1990, st_crs(study_region)))
#study_region <- study_region %>% as(Class = "Spatial")  # convert to sp object
#study_region <- study_region %>% as(Class = "Spatial")  # convert to sp object
# population_2000 <- rast("data/raw/socscape/us_pop2000myc.tif")
# population_2010 <- rast("data/raw/socscape/us_pop2010myc.tif")
## data prep -----------------------------------------------------------------
# clips population data to states to study region mask
pop_1990_cropped <- terra::crop(pop_1990, vect(study_region))
pop_1990_masked  <- terra::mask(pop_1990_cropped,
vect(study_region),
touches = TRUE)
plot(pop_1990_masked)
getValues(pop_1990_masked)
pop_1990_masked
?terra::getValues
d <- pop_1990_masked
1+2
d[1]
d[10000]
d[500]
d2 <- as.data.frame(d)
1+2
d2
d3 <- as_tibble(d2)
d3
d3 %>% drop_na(us_pop1990myc.population_data) %>% nrow()
d4 <- d3 %>% drop_na(us_pop1990myc.population_data)
sum(d4$us_pop1990myc.population_data)
